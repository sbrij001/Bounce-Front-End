{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nvar PlaylistContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistContainer, _React$Component);\n\n  function PlaylistContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      playlists: [] // first check if there is a user if there is fetch the data and display it on the page\n\n    };\n\n    _this.componentDidMount = function () {\n      Object.keys(_this.props.user).length > 0 ? fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\").then(function (resp) {\n        return resp.json();\n      }).then(function (playlists) {\n        return _this.setState({\n          playlists: playlists\n        });\n      }) : _this.props.history.push(\"/login\");\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Object.keys(this.props.user).length > 0 ? fetch(\"http://localhost:4000/rapperList\").then(function (resp) {\n        return resp.json();\n      }).then(function (rappers) {\n        return _this2.setState({\n          rappers: rappers,\n          filteredRappers: rappers\n        });\n      }) : this.props.history.push(\"/login\");\n    } //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n    // render takes in a callback function\n    // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('playlists', this.state.playlists);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Playlist Container\");\n    }\n  }]);\n\n  return PlaylistContainer;\n}(React.Component);\n\nexport default withRouter(PlaylistContainer);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js"],"names":["React","Route","withRouter","PlaylistContainer","state","playlists","componentDidMount","Object","keys","props","user","length","fetch","then","resp","json","setState","history","push","rappers","filteredRappers","console","log","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;;IAEMC,iB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL,CAKV;;AALU,K;;UAORC,iB,GAAoB,YAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAY,MAAKC,KAAL,CAAWC,IAAvB,EAA6BC,MAA7B,GAAsC,CAAtC,GACEC,KAAK,CAAC,mGAAD,CAAL,CACDC,IADC,CACI,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADR,EAEDF,IAFC,CAEI,UAAAR,SAAS;AAAA,eAAI,MAAKW,QAAL,CAAc;AAC/BX,UAAAA,SAAS,EAAEA;AADoB,SAAd,CAAJ;AAAA,OAFb,CADF,GAOE,MAAKI,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAPF;AAQD,K;;;;;;;wCAEmB;AAAA;;AACpBX,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,IAAvB,EAA6BC,MAA7B,GAAsC,CAAtC,GACIC,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADZ,EAEGF,IAFH,CAEQ,UAAAM,OAAO;AAAA,eACX,MAAI,CAACH,QAAL,CAAc;AAAEG,UAAAA,OAAO,EAAEA,OAAX;AAAoBC,UAAAA,eAAe,EAAED;AAArC,SAAd,CADW;AAAA,OAFf,CADJ,GAMI,KAAKV,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CANJ;AAOD,K,CACC;AACA;AACA;;;;6BACQ;AACNG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKlB,KAAL,CAAWC,SAAnC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAGD;;;;EApC6BL,KAAK,CAACuB,S;;AAuCtC,eAAerB,UAAU,CAACC,iBAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { Route, withRouter } from 'react-router-dom'\n\nclass PlaylistContainer extends React.Component{\n  state = {\n    playlists: []\n  }\n\n\n// first check if there is a user if there is fetch the data and display it on the page\n\n  componentDidMount = () => {\n    Object.keys(this.props.user).length > 0\n    ? fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\")\n    .then(resp => resp.json())\n    .then(playlists => this.setState({\n      playlists: playlists\n    })\n    )\n    : this.props.history.push(\"/login\")\n  }\n\n  componentDidMount() {\n  Object.keys(this.props.user).length > 0\n    ? fetch(\"http://localhost:4000/rapperList\")\n        .then(resp => resp.json())\n        .then(rappers =>\n          this.setState({ rappers: rappers, filteredRappers: rappers })\n        )\n    : this.props.history.push(\"/login\");\n}\n  //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n  // render takes in a callback function\n  // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n  render(){\n    console.log('playlists',this.state.playlists);\n    return(\n      <h1>Playlist Container</h1>\n    )\n  }\n}\n\nexport default withRouter(PlaylistContainer);\n"]},"metadata":{},"sourceType":"module"}