{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/Sidebar.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { slide as Menu } from 'react-burger-menu'; //scss files\n\nimport '../style/sass/components/sidebar.scss';\nimport '../style/sass/components/base.scss';\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      menuOpen: false // This keeps your state in sync with the opening/closing of the menu\n\n    };\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"handleStateChange\",\n    value: function handleStateChange(state) {\n      this.setState({\n        menuOpen: state.isOpen\n      });\n    } // This can be used to close the menu, e.g. when a user clicks a menu item\n\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.setState({\n        menuOpen: false\n      });\n    } // This can be used to toggle the menu, e.g. when using a custom icon\n    // Tip: You probably want to hide either/both default icons if using a custom icon\n    // See https://github.com/negomi/react-burger-menu#custom-icons\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      this.setState({\n        menuOpen: !this.state.menuOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        customBurgerIcon: React.createElement(\"img\", {\n          src: \"iconfinder_menu-alt_134216 (1).png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }),\n        isOpen: this.state.menuOpen,\n        onStateChange: function onStateChange(state) {\n          return _this2.handleStateChange(state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Home\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"About\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Contact\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Settings\")));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/Sidebar.js"],"names":["React","Route","Switch","withRouter","slide","Menu","Sidebar","state","menuOpen","setState","isOpen","handleStateChange","closeMenu","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B,C,CACA;;AACA,OAAO,uCAAP;AACA,OAAO,oCAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ,CAIR;;AAJQ,K;;;;;;sCAKWD,K,EAAO;AACxB,WAAKE,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAED,KAAK,CAACG;AAAjB,OAAd;AACD,K,CAED;;;;gCACa;AACX,WAAKD,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACD,K,CAED;AACA;AACA;;;;iCACc;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACD;;;6BAKS;AAAA;;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,gBAAgB,EAAG;AAAK,UAAA,GAAG,EAAC,oCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrB;AAEE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,QAFrB;AAGE,QAAA,aAAa,EAAE,uBAACD,KAAD;AAAA,iBAAW,MAAI,CAACI,iBAAL,CAAuBJ,KAAvB,CAAX;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACK,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF,CADF;AAcD;;;;EAxCmBZ,KAAK,CAACa,S;;AA0C5B,eAAeV,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { slide as Menu } from 'react-burger-menu'\n//scss files\nimport '../style/sass/components/sidebar.scss'\nimport '../style/sass/components/base.scss'\n\nclass Sidebar extends React.Component {\n  state = {\n    menuOpen: false\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  handleStateChange (state) {\n    this.setState({menuOpen: state.isOpen})\n  }\n\n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu () {\n    this.setState({menuOpen: false})\n  }\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu () {\n    this.setState({menuOpen: !this.state.menuOpen})\n  }\n\n\n\n\n  render () {\n    return (\n      <div>\n        <Menu\n          customBurgerIcon={ <img src=\"iconfinder_menu-alt_134216 (1).png\" /> }\n          isOpen={this.state.menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}\n        >\n          <a onClick={() => this.closeMenu()}>Home</a>\n          <a onClick={() => this.closeMenu()}>About</a>\n          <a onClick={() => this.closeMenu()}>Contact</a>\n          <a onClick={() => this.closeMenu()}>Settings</a>\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withRouter(Sidebar);\n"]},"metadata":{},"sourceType":"module"}