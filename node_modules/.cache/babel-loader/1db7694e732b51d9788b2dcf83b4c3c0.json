{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistCard.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport SongList from './SongList';\nimport CardCSS from '../CardCSS.css';\n\nvar PlaylistCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistCard, _React$Component);\n\n  function PlaylistCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clicked: false //in order to get the selected playlist I call the callback function defined in app\n      // which sets the state of current playlist to the selected playlist\n      // in app I pass that currentPlaylist to the songList\n\n    };\n\n    _this.handleClick = function (event) {\n      _this.props.selectedPlaylistCard(_this.props.playlist);\n\n      _this.setState({\n        clicked: !_this.state.clicked\n      });\n\n      _this.props.history.push(\"/playlists/:name\");\n    };\n\n    _this.savePlaylist = function (event) {\n      fetch(\"http://localhost:3000/api/v1/user_playlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: _this.props.user.id\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (playlist) {\n        _this.props.addPlayistToUser(_this.state);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistCard, [{\n    key: \"render\",\n    value: function render() {\n      //console.log('PlaylistCard',this.props.playlist);\n      return React.createElement(\"div\", {\n        className: \"playlist  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/playlists/\".concat(this.props.playlist.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"playlist-image\",\n        src: this.props.playlist.images[0].url,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"playlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"playlist-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.playlist.name), React.createElement(\"p\", {\n        className: \"playlist-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.playlist.description), React.createElement(\"button\", {\n        onClick: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Add To Playlist Library\")));\n    }\n  }]);\n\n  return PlaylistCard;\n}(React.Component);\n\nexport default withRouter(PlaylistCard);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistCard.js"],"names":["React","Link","withRouter","SongList","CardCSS","PlaylistCard","state","clicked","handleClick","event","props","selectedPlaylistCard","playlist","setState","history","push","savePlaylist","fetch","method","headers","Accept","body","JSON","stringify","user_id","user","id","then","resp","json","addPlayistToUser","name","images","url","description","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;IACMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH,CAIV;AACA;AACA;;AANU,K;;UAORC,W,GAAc,UAACC,KAAD,EAAW;AACvB,YAAKC,KAAL,CAAWC,oBAAX,CAAgC,MAAKD,KAAL,CAAWE,QAA3C;;AACA,YAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADT,OAAd;;AAGA,YAAKG,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;AAED,K;;UAEDC,Y,GAAe,UAACP,KAAD,EAAW;AACxBQ,MAAAA,KAAK,CAAC,6CAAD,EAAgD;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAF0C;AAMnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,OAAO,EAAE,MAAKd,KAAL,CAAWe,IAAX,CAAgBC;AADN,SAAf;AAN6C,OAAhD,CAAL,CAUCC,IAVD,CAUM,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAVV,EAWCF,IAXD,CAWM,UAAAf,QAAQ,EAAI;AAAC,cAAKF,KAAL,CAAWoB,gBAAX,CAA4B,MAAKxB,KAAjC;AAAwC,OAX3D;AAYD,K;;;;;;;6BAEO;AACN;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,uBAAgB,KAAKI,KAAL,CAAWE,QAAX,CAAoBmB,IAApC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWE,QAAX,CAAoBoB,MAApB,CAA2B,CAA3B,EAA8BC,GAAnE;AAAwE,QAAA,OAAO,EAAE,KAAKzB,WAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKE,KAAL,CAAWE,QAAX,CAAoBmB,IAAnD,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKrB,KAAL,CAAWE,QAAX,CAAoBsB,WAAzD,CAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKlB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,CAJF,CADF;AAYD;;;;EA9CwBhB,KAAK,CAACmC,S;;AAgDjC,eAAejC,UAAU,CAACG,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport SongList from './SongList'\nimport CardCSS from '../CardCSS.css'\nclass PlaylistCard extends React.Component{\n  state = {\n    clicked: false\n  }\n\n//in order to get the selected playlist I call the callback function defined in app\n// which sets the state of current playlist to the selected playlist\n// in app I pass that currentPlaylist to the songList\n  handleClick = (event) => {\n    this.props.selectedPlaylistCard(this.props.playlist)\n    this.setState({\n      clicked: !this.state.clicked\n    })\n    this.props.history.push(\"/playlists/:name\")\n\n  }\n\n  savePlaylist = (event) => {\n    fetch(\"http://localhost:3000/api/v1/user_playlists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: this.props.user.id\n      })\n    })\n    .then(resp => resp.json())\n    .then(playlist => {this.props.addPlayistToUser(this.state)})\n  }\n\n  render(){\n    //console.log('PlaylistCard',this.props.playlist);\n    return(\n      <div className=\"playlist  \">\n        <Link to={`/playlists/${this.props.playlist.name}`}>\n        <img className=\"playlist-image\" src={this.props.playlist.images[0].url} onClick={this.handleClick}/>\n        </Link>\n        <div className=\"playlist-info\">\n          <h3 className=\"playlist-name\">{this.props.playlist.name}</h3>\n          <p className=\"playlist-description\">{this.props.playlist.description}</p>\n          <button onClick={this.savePlaylist}>Add To Playlist Library</button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(PlaylistCard);\n"]},"metadata":{},"sourceType":"module"}