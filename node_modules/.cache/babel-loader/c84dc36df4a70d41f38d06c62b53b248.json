{"ast":null,"code":"import _objectSpread from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { PureComponent } from \"react\";\nimport classnames from \"classnames\";\nimport { getCoord } from \"@turf/invariant\";\nimport { extractEventHandlers } from \"../../common/utils\";\nimport Cluster from \"./Cluster\";\nimport { MarkerLayer } from \"../MarkerLayer\";\nimport \"./ClusterLayer.css\";\n\nvar ClusterLayer =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ClusterLayer, _PureComponent);\n\n  function ClusterLayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClusterLayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClusterLayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._clusterMarkerFactory = function (coordinates, pointCount, getLeaves) {\n      var clusterClassName = _this.props.clusterClassName;\n      var className = classnames(\"cluster-layer--cluster\", clusterClassName);\n      var points = getLeaves();\n\n      var pointsProps = _this._getPointsProps(points);\n\n      var clusterEventHandlers = extractEventHandlers(_this.props, /^onCluster(.+)$/i);\n      return React.createElement(MarkerLayer, Object.assign({\n        key: coordinates.toString(),\n        coordinates: coordinates,\n        className: \"cluster-layer-container\",\n        properties: pointsProps\n      }, clusterEventHandlers), React.createElement(\"div\", {\n        className: className\n      }, React.createElement(\"div\", null, pointCount)));\n    };\n\n    return _this;\n  }\n\n  _createClass(ClusterLayer, [{\n    key: \"_getClusterProps\",\n    value: function _getClusterProps() {\n      var _this$props = this.props,\n          radius = _this$props.radius,\n          minZoom = _this$props.minZoom,\n          maxZoom = _this$props.maxZoom,\n          extent = _this$props.extent,\n          nodeSize = _this$props.nodeSize;\n      return {\n        radius: radius,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        extent: extent,\n        nodeSize: nodeSize\n      };\n    }\n  }, {\n    key: \"_getPointsProps\",\n    value: function _getPointsProps(points) {\n      return points.map(function (point) {\n        var feature = point.props[\"data-feature\"];\n        var properties = feature.properties;\n        return _objectSpread({}, properties, {\n          coordinates: getCoord(feature)\n        });\n      });\n    }\n  }, {\n    key: \"_renderMarkers\",\n    value: function _renderMarkers() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          pointClassName = _this$props2.pointClassName,\n          _this$props2$pointSty = _this$props2.pointStyles,\n          pointStyles = _this$props2$pointSty === void 0 ? {} : _this$props2$pointSty;\n      var markerClassName = classnames(\"cluster-layer--point\", pointClassName);\n      return data.features.map(function (feature, key) {\n        var coordinates = feature.geometry.coordinates,\n            properties = feature.properties;\n        var style = properties.style;\n        var eventHandlers = extractEventHandlers(_this2.props);\n\n        var cssObject = _objectSpread({}, pointStyles, style);\n\n        return React.createElement(MarkerLayer, Object.assign({\n          key: \"cluster-layer-point\".concat(key),\n          coordinates: coordinates,\n          \"data-feature\": feature,\n          properties: properties\n        }, eventHandlers), React.createElement(\"div\", {\n          className: markerClassName,\n          style: cssObject\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clusterProps = this._getClusterProps();\n\n      return React.createElement(Cluster, Object.assign({\n        ClusterMarkerFactory: this._clusterMarkerFactory\n      }, clusterProps), this._renderMarkers());\n    }\n  }]);\n\n  return ClusterLayer;\n}(PureComponent);\n\nClusterLayer.displayName = \"ClusterLayer\";\nClusterLayer.defaultProps = {\n  radius: 60,\n  minZoom: 0,\n  maxZoom: 20,\n  extent: 512,\n  nodeSize: 64\n};\nexport default ClusterLayer;","map":null,"metadata":{},"sourceType":"module"}