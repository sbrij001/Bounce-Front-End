{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistCard.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport SongList from './SongList'; //css/sass\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar PlaylistCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistCard, _React$Component);\n\n  function PlaylistCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clicked: false //in order to get the selected playlist I call the callback function defined in app\n      // which sets the state of current playlist to the selected playlist\n      // in app I pass that currentPlaylist to the songList\n\n    };\n\n    _this.handleClick = function (event) {\n      _this.props.selectedPlaylistCard(_this.props.playlist);\n\n      _this.setState({\n        clicked: !_this.state.clicked\n      });\n\n      _this.props.history.push(\"/playlists/:name\");\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistCard, [{\n    key: \"render\",\n    // console.log('PlaylistCard', `/playlists/${this.formattedName()}`);\n    // console.log(this.formattedName());\n    // console.log(this.props);\n    // console.log('blerg', this.props.playlist.name);\n    // formattedName = () => {return this.props.playlist.name.replace(' ', '-')}\n    value: function render() {\n      // console.log('PlaylistCard',this.props);\n      return React.createElement(Card, {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        component: \"img\",\n        alt: \"playlist\",\n        className: classes.media,\n        height: \"140\",\n        image: this.props.playlist.images ? this.props.playlist.images[0].url : null,\n        onClick: this.handleClick,\n        title: \"PlaylistCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.playlist.length ? this.props.playlist[0].name : this.props.playlist.name), React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.playlist.description))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Share\"), React.createElement(Link, {\n        to: \"/playlists/\".concat(this.props.playlist.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Learn More\"))));\n    }\n  }]);\n\n  return PlaylistCard;\n}(React.Component);\n\nexport default withRouter(PlaylistCard);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistCard.js"],"names":["React","Link","withRouter","SongList","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","PlaylistCard","state","clicked","handleClick","event","props","selectedPlaylistCard","playlist","setState","history","push","classes","media","images","url","length","name","description","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH,CAIV;AACA;AACA;;AANU,K;;UAORC,W,GAAc,UAACC,KAAD,EAAW;AACvB,YAAKC,KAAL,CAAWC,oBAAX,CAAgC,MAAKD,KAAL,CAAWE,QAA3C;;AACA,YAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADT,OAAd;;AAGA,YAAKG,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;AAED,K;;;;;;;AAGD;AACA;AACA;AACA;AACE;6BAEM;AACN;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,GAAG,EAAC,UAFN;AAGE,QAAA,SAAS,EAAEC,OAAO,CAACC,KAHrB;AAIE,QAAA,MAAM,EAAC,KAJT;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,QAAX,CAAoBM,MAApB,GAA4B,KAAKR,KAAL,CAAWE,QAAX,CAAoBM,MAApB,CAA2B,CAA3B,EAA8BC,GAA1D,GAAgE,IALzE;AAK+E,QAAA,OAAO,EAAE,KAAKX,WAL7F;AAME,QAAA,KAAK,EAAC,cANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKE,KAAL,CAAWE,QAAX,CAAoBQ,MAApB,GAA6B,KAAKV,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBS,IAApD,GAA2D,KAAKX,KAAL,CAAWE,QAAX,CAAoBS,IADnF,CADF,EAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,KAAL,CAAWE,QAAX,CAAoBU,WADvB,CAJF,CATF,CADA,EAmBA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,IAAD;AAAM,QAAA,EAAE,uBAAgB,KAAKZ,KAAL,CAAWE,QAAX,CAAoBS,IAApC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAJF,CAnBA,CADF;AAgCD;;;;EA3DwB3B,KAAK,CAAC6B,S;;AA6DjC,eAAe3B,UAAU,CAACS,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport SongList from './SongList'\n//css/sass\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nclass PlaylistCard extends React.Component{\n  state = {\n    clicked: false\n  }\n\n//in order to get the selected playlist I call the callback function defined in app\n// which sets the state of current playlist to the selected playlist\n// in app I pass that currentPlaylist to the songList\n  handleClick = (event) => {\n    this.props.selectedPlaylistCard(this.props.playlist)\n    this.setState({\n      clicked: !this.state.clicked\n    })\n    this.props.history.push(\"/playlists/:name\")\n\n  }\n\n\n  // console.log('PlaylistCard', `/playlists/${this.formattedName()}`);\n  // console.log(this.formattedName());\n  // console.log(this.props);\n  // console.log('blerg', this.props.playlist.name);\n    // formattedName = () => {return this.props.playlist.name.replace(' ', '-')}\n\n  render(){\n    // console.log('PlaylistCard',this.props);\n\n    return(\n      <Card className=\"card\">\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"playlist\"\n          className={classes.media}\n          height=\"140\"\n          image={this.props.playlist.images? this.props.playlist.images[0].url : null} onClick={this.handleClick}\n          title=\"PlaylistCard\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            { this.props.playlist.length ? this.props.playlist[0].name : this.props.playlist.name }\n          </Typography>\n          <Typography component=\"p\">\n            {this.props.playlist.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Link to={`/playlists/${this.props.playlist.name}`}>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n    )\n  }\n}\nexport default withRouter(PlaylistCard);\n"]},"metadata":{},"sourceType":"module"}