{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongCard.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { API_ROOT, HEADERS } from '../constants';\n\nvar SongCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SongCard, _React$Component);\n\n  function SongCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SongCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SongCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      albumImage: [],\n      playingURL: \"\",\n      audio: null,\n      playing: false\n    };\n\n    _this.componentDidMount = function () {\n      var apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n      var href = _this.props.track.links.albums.href;\n      var url = \"\".concat(href).concat(apiKey);\n      url ? fetch(url).then(function (resp) {\n        return resp.json();\n      }).then(function (albumsArr) {\n        _this.setState({\n          albumImage: albumsArr\n        });\n      }) : console.log('hi');\n    };\n\n    _this.handleClick = function (event) {\n      _this.props.selectedTrackCard(_this.props.track);\n\n      _this.setState({\n        clicked: !_this.state.clicked\n      });\n\n      _this.props.history.push(\"/playlists/:name/:songname\");\n    };\n\n    return _this;\n  }\n\n  _createClass(SongCard, [{\n    key: \"playAudio\",\n    //  componentDidUpdate(prestate, preprops){\n    //\n    //    if(this.props.currentAudio !== this.state.audio)\n    //    {\n    //      console.log(\"hit didupdate\")\n    //      if(this.props.currentAudio){\n    //         console.log(\"hit didupdate 2\")\n    //        this.props.currentAudio.pause()\n    //\n    //      }\n    //  }\n    // }\n    value: function playAudio(previewURL) {\n      console.log('song card props', this.props.track);\n      var audio = new Audio(previewURL);\n      audio.play();\n      this.setState({\n        playing: true,\n        playingURL: previewURL,\n        audio: audio,\n        title: this.props.currentSong.name\n      });\n      fetch(\"\".concat(API_ROOT, \"/webplayers\"), {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({\n          title: this.state.title\n        })\n      });\n    }\n  }, {\n    key: \"pauseAudio\",\n    value: function pauseAudio(previewURL) {\n      var _this2 = this;\n\n      console.log(\"pause audio\");\n      var audio = new Audio(previewURL);\n\n      if (this.state.playingURL === previewURL) {\n        this.state.audio.pause();\n        this.setState({\n          playing: false\n        }, function () {\n          return console.log(\"set playing to false\", _this2.state.playing);\n        });\n      }\n    } //why is album[0] undefined?\n    //<img src={this.state.albumImage.albums[0].links.images.href}/>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('Song card props', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"song-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.track.name), React.createElement(\"h3\", {\n        className: \"song-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.track.artistName), React.createElement(\"h4\", {\n        className: \"song-album-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.track.albumName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.playAudio(_this3.props.track.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.pauseAudio(_this3.props.track.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"PAUSE\"), React.createElement(Link, {\n        to: \"/playlists/\".concat(this.props.currentPlaylist.name, \"/\").concat(this.props.track.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"View Song\")))));\n    }\n  }]);\n\n  return SongCard;\n}(React.Component);\n\nexport default withRouter(SongCard);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongCard.js"],"names":["React","Link","withRouter","API_ROOT","HEADERS","SongCard","state","albumImage","playingURL","audio","playing","componentDidMount","apiKey","href","props","track","links","albums","url","fetch","then","resp","json","albumsArr","setState","console","log","handleClick","event","selectedTrackCard","clicked","history","push","previewURL","Audio","play","title","currentSong","name","method","headers","body","JSON","stringify","pause","artistName","albumName","playAudio","pauseAudio","currentPlaylist","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { API_ROOT, HEADERS } from '../constants'\nclass SongCard extends React.Component{\n  state = {\n    albumImage: [],\n    playingURL: \"\",\n    audio: null,\n    playing: false,\n  }\n\n  componentDidMount = () => {\n    const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    const href = this.props.track.links.albums.href\n    const url = `${href}${apiKey}`\n    url\n      ? fetch(url)\n      .then(resp => resp.json())\n      .then(albumsArr => {\n        this.setState({\n          albumImage: albumsArr\n        })\n      })\n      : console.log('hi');\n  }\n\n//  componentDidUpdate(prestate, preprops){\n//\n//    if(this.props.currentAudio !== this.state.audio)\n//    {\n//      console.log(\"hit didupdate\")\n//      if(this.props.currentAudio){\n//         console.log(\"hit didupdate 2\")\n//        this.props.currentAudio.pause()\n//\n//      }\n//  }\n// }\n  playAudio(previewURL){\n    console.log('song card props', this.props.track);\n      let audio = new Audio(previewURL)\n      audio.play()\n      this.setState({\n        playing: true,\n        playingURL: previewURL,\n        audio: audio,\n        title: this.props.currentSong.name\n      })\n      fetch(`${API_ROOT}/webplayers`, {\n        method: 'POST',\n        headers: HEADERS,\n        body: JSON.stringify({\n          title: this.state.title\n        })\n      });\n  }\n\n  pauseAudio(previewURL){\n    console.log(\"pause audio\")\n    let audio = new Audio(previewURL)\n    if (this.state.playingURL === previewURL) {\n      this.state.audio.pause()\n      this.setState({\n        playing: false\n      }, ()=>console.log(\"set playing to false\",this.state.playing))\n    }\n  }\n\n  //why is album[0] undefined?\n  //<img src={this.state.albumImage.albums[0].links.images.href}/>\n  handleClick = (event) => {\n    this.props.selectedTrackCard(this.props.track)\n    this.setState({\n      clicked: !this.state.clicked\n    })\n    this.props.history.push(\"/playlists/:name/:songname\")\n  }\n\n  render(){\n    console.log('Song card props',this.props);\n    return(\n      <div>\n        <div className=\"-info\">\n          <h2 className=\"song-name\">{this.props.track.name}</h2>\n          <h3 className=\"song-artist\">{this.props.track.artistName}</h3>\n          <h4 className=\"song-album-name\">{this.props.track.albumName}</h4>\n          <div>\n          <button onClick={ () => this.playAudio(this.props.track.previewURL) }>PLAY</button>\n          <button onClick={ () => this.pauseAudio(this.props.track.previewURL) }>PAUSE</button>\n          <Link to={`/playlists/${this.props.currentPlaylist.name}/${this.props.track.name}`}>\n            <button onClick={this.handleClick}>View Song</button>\n          </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SongCard);\n"]},"metadata":{},"sourceType":"module"}