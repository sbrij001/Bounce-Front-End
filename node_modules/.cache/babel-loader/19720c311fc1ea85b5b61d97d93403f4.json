{"ast":null,"code":"// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import ClassNames from 'classnames';\n// import SoundCloudAudio from 'soundcloud-audio';\n// import { PlayIconSVG, PauseIconSVG } from './Icons';\n//\n// class PlayButton extends Component {\n//   shouldComponentUpdate(nextProps) {\n//     const { playing, seeking } = this.props;\n//\n//     return (\n//       playing !== nextProps.playing || seeking !== nextProps.seeking\n//     );\n//   }\n//\n//   handleClick(e) {\n//     const { playing, soundCloudAudio, onTogglePlay } = this.props;\n//\n//     if (!playing) {\n//       soundCloudAudio && soundCloudAudio.play({\n//         playlistIndex: soundCloudAudio._playlistIndex\n//       });\n//     } else {\n//       soundCloudAudio && soundCloudAudio.pause();\n//     }\n//\n//     onTogglePlay && onTogglePlay(e);\n//   }\n//\n//   render() {\n//     const { playing, seekingIcon, seeking, className, style } = this.props;\n//\n//     let iconNode;\n//\n//     if (seeking && seekingIcon) {\n//       iconNode = React.cloneElement(seekingIcon);\n//     } else if (playing) {\n//       iconNode = <PauseIconSVG />;\n//     } else {\n//       iconNode = <PlayIconSVG />;\n//     }\n//\n//     const classNames = ClassNames('sb-soundplayer-btn sb-soundplayer-play-btn', className);\n//\n//     return (\n//       <button type=\"button\" className={classNames} style={style} onClick={this.handleClick}>\n//         {iconNode}\n//       </button>\n//     );\n//   }\n// }\n//\n// PlayButton.propTypes = {\n//   className: PropTypes.string,\n//   seeking: PropTypes.bool,\n//   playing: PropTypes.bool,\n//   onTogglePlay: PropTypes.func,\n//   seekingIcon: PropTypes.node,\n//   soundCloudAudio: PropTypes.instanceOf(SoundCloudAudio)\n// };\n//\n// PlayButton.defaultProps = {\n//   playing: false,\n//   seeking: false\n// };\n//\n// export default PlayButton;","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PureComponents/PlayButton.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import ClassNames from 'classnames';\n// import SoundCloudAudio from 'soundcloud-audio';\n// import { PlayIconSVG, PauseIconSVG } from './Icons';\n//\n// class PlayButton extends Component {\n//   shouldComponentUpdate(nextProps) {\n//     const { playing, seeking } = this.props;\n//\n//     return (\n//       playing !== nextProps.playing || seeking !== nextProps.seeking\n//     );\n//   }\n//\n//   handleClick(e) {\n//     const { playing, soundCloudAudio, onTogglePlay } = this.props;\n//\n//     if (!playing) {\n//       soundCloudAudio && soundCloudAudio.play({\n//         playlistIndex: soundCloudAudio._playlistIndex\n//       });\n//     } else {\n//       soundCloudAudio && soundCloudAudio.pause();\n//     }\n//\n//     onTogglePlay && onTogglePlay(e);\n//   }\n//\n//   render() {\n//     const { playing, seekingIcon, seeking, className, style } = this.props;\n//\n//     let iconNode;\n//\n//     if (seeking && seekingIcon) {\n//       iconNode = React.cloneElement(seekingIcon);\n//     } else if (playing) {\n//       iconNode = <PauseIconSVG />;\n//     } else {\n//       iconNode = <PlayIconSVG />;\n//     }\n//\n//     const classNames = ClassNames('sb-soundplayer-btn sb-soundplayer-play-btn', className);\n//\n//     return (\n//       <button type=\"button\" className={classNames} style={style} onClick={this.handleClick}>\n//         {iconNode}\n//       </button>\n//     );\n//   }\n// }\n//\n// PlayButton.propTypes = {\n//   className: PropTypes.string,\n//   seeking: PropTypes.bool,\n//   playing: PropTypes.bool,\n//   onTogglePlay: PropTypes.func,\n//   seekingIcon: PropTypes.node,\n//   soundCloudAudio: PropTypes.instanceOf(SoundCloudAudio)\n// };\n//\n// PlayButton.defaultProps = {\n//   playing: false,\n//   seeking: false\n// };\n//\n// export default PlayButton;\n"]},"metadata":{},"sourceType":"module"}