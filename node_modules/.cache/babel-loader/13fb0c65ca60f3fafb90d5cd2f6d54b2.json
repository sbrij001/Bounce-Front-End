{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport PlaylistCard from './PlaylistCard';\nimport SongCard from './SongCard';\n\nvar PlaylistContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistContainer, _React$Component);\n\n  function PlaylistContainer() {\n    _classCallCheck(this, PlaylistContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaylistContainer).apply(this, arguments));\n  }\n\n  _createClass(PlaylistContainer, [{\n    key: \"render\",\n    // state = {\n    //   playlistsArr: []\n    // }\n    // first check if there is a user if there is fetch the data and display it on the page\n    // else push to the login\n    //this.state.playlistsArr.playlists[0].links.tracks\n    // componentDidMount = () => {\n    //   Object.keys(this.props.user).length > 0\n    //   ? fetch(\"http://api.napster.com/v2.2/playlists/featured?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\")\n    //   .then(resp => resp.json())\n    //   .then(playlistObj => this.setState({\n    //     playlistsArr: playlistObj.playlists\n    //   })\n    //   )\n    //   : this.props.history.push(\"/login\")\n    // }\n    // renderPlaylistCard = () => {\n    //\n    //   const playlists = this.props.playlistsArr\n    //     if (playlists.length > 0) {\n    //       const newArr = playlists.map( playlist => {\n    //       return <PlaylistCard key={playlist.id} playlist={playlist} />\n    //\n    //       })\n    //       return newArr\n    //     }else {\n    //       return <h1>No data</h1>\n    //     }\n    // }\n    //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n    // render takes in a callback function\n    // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n    value: function render() {\n      console.log('playlist', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Playlist Container\"), React.createElement(Route, {\n        path: \"/https://api.napster.com/v2.2/playlists/\",\n        render: function render() {\n          return SongCard;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), this.renderPlaylistCard());\n    }\n  }]);\n\n  return PlaylistContainer;\n}(React.Component);\n\nexport default withRouter(PlaylistContainer);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js"],"names":["React","Route","withRouter","PlaylistCard","SongCard","PlaylistContainer","console","log","props","renderPlaylistCard","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,iB;;;;;;;;;;;;;AACJ;AACA;AACA;AAGF;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;6BACQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKC,KAA5B;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0CAAZ;AAAuD,QAAA,MAAM,EAAE;AAAA,iBAAMJ,QAAN;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKK,kBAAL,EAHH,CADF;AAOD;;;;EA9C6BT,KAAK,CAACU,S;;AAiDtC,eAAeR,UAAU,CAACG,iBAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport PlaylistCard from './PlaylistCard';\nimport SongCard from './SongCard';\n\nclass PlaylistContainer extends React.Component{\n  // state = {\n  //   playlistsArr: []\n  // }\n\n\n// first check if there is a user if there is fetch the data and display it on the page\n// else push to the login\n//this.state.playlistsArr.playlists[0].links.tracks\n  // componentDidMount = () => {\n  //   Object.keys(this.props.user).length > 0\n  //   ? fetch(\"http://api.napster.com/v2.2/playlists/featured?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\")\n  //   .then(resp => resp.json())\n  //   .then(playlistObj => this.setState({\n  //     playlistsArr: playlistObj.playlists\n  //   })\n  //   )\n  //   : this.props.history.push(\"/login\")\n  // }\n\n  // renderPlaylistCard = () => {\n  //\n  //   const playlists = this.props.playlistsArr\n  //     if (playlists.length > 0) {\n  //       const newArr = playlists.map( playlist => {\n  //       return <PlaylistCard key={playlist.id} playlist={playlist} />\n  //\n  //       })\n  //       return newArr\n  //     }else {\n  //       return <h1>No data</h1>\n  //     }\n  // }\n\n  //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n  // render takes in a callback function\n  // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n  render(){\n    console.log('playlist',this.props);\n    return(\n      <div>\n        <h1>Playlist Container</h1>\n        <Route path=\"/https://api.napster.com/v2.2/playlists/\" render={() => SongCard}/>\n        {this.renderPlaylistCard()}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PlaylistContainer);\n"]},"metadata":{},"sourceType":"module"}