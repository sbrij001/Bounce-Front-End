{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport PlaylistCard from './PlaylistCard';\nimport SongCard from './SongCard'; //css\n\nimport './style/sass/container';\n\nvar PlaylistContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistContainer, _React$Component);\n\n  function PlaylistContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      playlistsArr: [] // first check if there is a user if there is fetch the data and display it on the page\n      // else push to the login\n      //this.state.playlistsArr.playlists[0].links.tracks\n\n    };\n\n    _this.componentDidMount = function () {\n      Object.keys(_this.props.user).length > 0 ? fetch(\"http://api.napster.com/v2.2/playlists/featured?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\").then(function (resp) {\n        return resp.json();\n      }).then(function (playlistObj) {\n        return _this.setState({\n          playlistsArr: playlistObj.playlists\n        });\n      }) : _this.props.history.push(\"/login\");\n    };\n\n    _this.renderPlaylistCard = function () {\n      var newArr = _this.state.playlistsArr.map(function (playlist) {\n        return React.createElement(PlaylistCard, {\n          key: playlist.id,\n          playlist: playlist,\n          selectedPlaylistCard: _this.props.selectedPlaylistCard,\n          handleClickForPostingSongToWebplayer: _this.props.handleClickForPostingSongToWebplayer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n\n      return newArr;\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistContainer, [{\n    key: \"render\",\n    //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n    // render takes in a callback function\n    // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n    value: function render() {\n      // console.log('playlistCard props', this.props);\n      console.log('container', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Playlist Container\"), React.createElement(Route, {\n        path: \"/https://api.napster.com/v2.2/playlists/\",\n        render: function render() {\n          return SongCard;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), this.renderPlaylistCard());\n    }\n  }]);\n\n  return PlaylistContainer;\n}(React.Component);\n\nexport default withRouter(PlaylistContainer);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js"],"names":["React","Route","withRouter","PlaylistCard","SongCard","PlaylistContainer","state","playlistsArr","componentDidMount","Object","keys","props","user","length","fetch","then","resp","json","playlistObj","setState","playlists","history","push","renderPlaylistCard","newArr","map","playlist","id","selectedPlaylistCard","handleClickForPostingSongToWebplayer","console","log","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,OAAO,wBAAP;;IACMC,iB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,EADR,CAKV;AACA;AACA;;AAPU,K;;UAQRC,iB,GAAoB,YAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAY,MAAKC,KAAL,CAAWC,IAAvB,EAA6BC,MAA7B,GAAsC,CAAtC,GACEC,KAAK,CAAC,wGAAD,CAAL,CACDC,IADC,CACI,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADR,EAEDF,IAFC,CAEI,UAAAG,WAAW;AAAA,eAAI,MAAKC,QAAL,CAAc;AACjCZ,UAAAA,YAAY,EAAEW,WAAW,CAACE;AADO,SAAd,CAAJ;AAAA,OAFf,CADF,GAOE,MAAKT,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAPF;AAQD,K;;UAEDC,kB,GAAqB,YAAM;AACzB,UAAMC,MAAM,GAAG,MAAKlB,KAAL,CAAWC,YAAX,CAAwBkB,GAAxB,CAA6B,UAAAC,QAAQ,EAAI;AACtD,eAAO,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAA5B;AAAgC,UAAA,QAAQ,EAAED,QAA1C;AAAoD,UAAA,oBAAoB,EAAE,MAAKf,KAAL,CAAWiB,oBAArF;AAA2G,UAAA,oCAAoC,EAAE,MAAKjB,KAAL,CAAWkB,oCAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFc,CAAf;;AAGE,aAAOL,MAAP;AACH,K;;;;;;;AAED;AACA;AACA;6BACQ;AACN;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKpB,KAA9B;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0CAAZ;AAAuD,QAAA,MAAM,EAAE;AAAA,iBAAMP,QAAN;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKmB,kBAAL,EAHH,CADF;AAOD;;;;EAxC6BvB,KAAK,CAACgC,S;;AA2CtC,eAAe9B,UAAU,CAACG,iBAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport PlaylistCard from './PlaylistCard';\nimport SongCard from './SongCard';\n\n//css\nimport './style/sass/container'\nclass PlaylistContainer extends React.Component{\n  state = {\n    playlistsArr: [],\n  }\n\n\n// first check if there is a user if there is fetch the data and display it on the page\n// else push to the login\n//this.state.playlistsArr.playlists[0].links.tracks\n  componentDidMount = () => {\n    Object.keys(this.props.user).length > 0\n    ? fetch(\"http://api.napster.com/v2.2/playlists/featured?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\")\n    .then(resp => resp.json())\n    .then(playlistObj => this.setState({\n      playlistsArr: playlistObj.playlists\n    })\n    )\n    : this.props.history.push(\"/login\")\n  }\n\n  renderPlaylistCard = () => {\n    const newArr = this.state.playlistsArr.map( playlist => {\n      return <PlaylistCard key={playlist.id} playlist={playlist} selectedPlaylistCard={this.props.selectedPlaylistCard} handleClickForPostingSongToWebplayer={this.props.handleClickForPostingSongToWebplayer}/>\n    })\n      return newArr\n  }\n\n  //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n  // render takes in a callback function\n  // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n  render(){\n    // console.log('playlistCard props', this.props);\n    console.log('container', this.props);\n    return(\n      <div>\n        <h1>Playlist Container</h1>\n        <Route path=\"/https://api.napster.com/v2.2/playlists/\" render={() => SongCard}/>\n        {this.renderPlaylistCard()}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PlaylistContainer);\n"]},"metadata":{},"sourceType":"module"}