{"ast":null,"code":"var _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/src/components/Cable.js\";\nimport React, { Fragment } from 'react';\nimport { ActionCable } from 'react-actioncable-provider';\n\nvar Cable = function Cable(_ref) {\n  var webplayers = _ref.webplayers,\n      handleRecievedUserSong = _ref.handleRecievedUserSong;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, webplayers.map(function (webplayer) {\n    return React.createElement(ActionCable, {\n      key: webplayer.id,\n      channel: {\n        channel: 'UserSongsChannel',\n        webplayer: webplayer.id\n      },\n      onReceived: handleRecievedUserSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Cable;","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/src/components/Cable.js"],"names":["React","Fragment","ActionCable","Cable","webplayers","handleRecievedUserSong","map","webplayer","id","channel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA4C;AAAA,MAAzCC,UAAyC,QAAzCA,UAAyC;AAAA,MAA7BC,sBAA6B,QAA7BA,sBAA6B;AACxD,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,UAAU,CAACE,GAAX,CAAe,UAAAC,SAAS,EAAI;AAC5B,WACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,SAAS,CAACC,EADjB;AAEE,MAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE,kBAAX;AAA+BF,QAAAA,SAAS,EAAEA,SAAS,CAACC;AAApD,OAFX;AAGE,MAAA,UAAU,EAAEH,sBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARC,CADJ,CADF;AAaD,CAdD;;AAgBA,eAAeF,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { ActionCable } from 'react-actioncable-provider';\n\nconst Cable = ({ webplayers, handleRecievedUserSong }) => {\n  return (\n    <Fragment>\n      { webplayers.map(webplayer => {\n        return (\n          <ActionCable\n            key={webplayer.id}\n            channel={{ channel: 'UserSongsChannel', webplayer: webplayer.id }}\n            onReceived={handleRecievedUserSong}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default Cable;\n"]},"metadata":{},"sourceType":"module"}