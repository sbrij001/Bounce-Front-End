{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongList.js\";\nimport React from 'react';\nimport SongCard from './SongCard';\nimport { withRouter } from 'react-router-dom'; //withRouter gives the app the props\n\nvar SongList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SongList, _React$Component);\n\n  function SongList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SongList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SongList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tracks: []\n    };\n\n    _this.componentDidMount = function () {\n      var apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n      var href = _this.props.currentPlaylist.links.tracks.href;\n      var url = \"\".concat(href).concat(apiKey);\n      console.log('URL THAT IM GETTING', url);\n      url ? fetch(url).then(function (resp) {\n        return resp.json();\n      }).then(function (tracksData) {\n        _this.setState({\n          tracks: tracksData\n        });\n      }) : console.log('hi');\n    };\n\n    _this.renderTracks = function () {\n      var tracks = _this.state.tracks;\n\n      if (tracks.length > 0) {\n        var newArr = tracks.map(function (track) {\n          return React.createElement(SongCard, {\n            key: track.id,\n            track: track,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    _this.renderPlaylistCard = function () {\n      var playlists = _this.state.playlistsArr;\n\n      if (playlists.length > 0) {\n        var newArr = playlists.map(function (playlist) {\n          return React.createElement(PlaylistCard, {\n            key: playlist.id,\n            playlist: playlist,\n            selectedPlaylistCard: _this.props.selectedPlaylistCard,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          });\n        });\n        return newArr;\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"No data\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SongList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"SongList\", this.state.songs);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Song List\"), this.handleDisplayingTracks());\n    }\n  }]);\n\n  return SongList;\n}(React.Component);\n\nexport default withRouter(SongList);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongList.js"],"names":["React","SongCard","withRouter","SongList","state","tracks","componentDidMount","apiKey","href","props","currentPlaylist","links","url","console","log","fetch","then","resp","json","tracksData","setState","renderTracks","length","newArr","map","track","id","renderPlaylistCard","playlists","playlistsArr","playlist","selectedPlaylistCard","songs","handleDisplayingTracks","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;IACMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAMRC,iB,GAAoB,YAAM;AACxB,UAAMC,MAAM,GAAG,mEAAf;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,eAAX,CAA2BC,KAA3B,CAAiCN,MAAjC,CAAwCG,IAArD;AACA,UAAMI,GAAG,aAAMJ,IAAN,SAAaD,MAAb,CAAT;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,GAAlC;AACAA,MAAAA,GAAG,GACCG,KAAK,CAACH,GAAD,CAAL,CACDI,IADC,CACI,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADR,EAEDF,IAFC,CAEI,UAAAG,UAAU,EAAI;AAClB,cAAKC,QAAL,CAAc;AACZf,UAAAA,MAAM,EAAEc;AADI,SAAd;AAGD,OANC,CADD,GAQCN,OAAO,CAACC,GAAR,CAAY,IAAZ,CARJ;AASD,K;;UAEDO,Y,GAAe,YAAM;AACnB,UAAMhB,MAAM,GAAG,MAAKD,KAAL,CAAWC,MAA1B;;AACA,UAAKA,MAAM,CAACiB,MAAP,GAAgB,CAArB,EAAyB;AACvB,YAAMC,MAAM,GAAGlB,MAAM,CAACmB,GAAP,CAAW,UAAAC,KAAK,EAAI;AACjC,iBAAO,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEA,KAAK,CAACC,EAArB;AAAyB,YAAA,KAAK,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFc,CAAf;AAGD;AACF,K;;UAEDE,kB,GAAqB,YAAM;AACzB,UAAMC,SAAS,GAAG,MAAKxB,KAAL,CAAWyB,YAA7B;;AACE,UAAID,SAAS,CAACN,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAMC,MAAM,GAAGK,SAAS,CAACJ,GAAV,CAAe,UAAAM,QAAQ,EAAI;AAC1C,iBAAO,oBAAC,YAAD;AAAc,YAAA,GAAG,EAAEA,QAAQ,CAACJ,EAA5B;AAAgC,YAAA,QAAQ,EAAEI,QAA1C;AAAoD,YAAA,oBAAoB,EAAE,MAAKrB,KAAL,CAAWsB,oBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACC,SAFc,CAAf;AAGA,eAAOR,MAAP;AACD,OALD,MAKM;AACJ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;AACJ,K;;;;;;;6BAEO;AACNV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKV,KAAL,CAAW4B,KAAnC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEC,KAAKC,sBAAL,EAFD,CADF;AAMD;;;;EApDoBjC,KAAK,CAACkC,S;;AAuD7B,eAAehC,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import React from 'react';\nimport SongCard from './SongCard';\nimport { withRouter } from 'react-router-dom';\n//withRouter gives the app the props\nclass SongList extends React.Component{\n  state = {\n    tracks: []\n  }\n\n\n\n  componentDidMount = () => {\n    const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    const href = this.props.currentPlaylist.links.tracks.href\n    const url = `${href}${apiKey}`\n    console.log('URL THAT IM GETTING',url);\n    url\n      ? fetch(url)\n      .then(resp => resp.json())\n      .then(tracksData => {\n        this.setState({\n          tracks: tracksData\n        })\n      })\n      : console.log('hi');\n  }\n\n  renderTracks = () => {\n    const tracks = this.state.tracks\n    if ( tracks.length > 0 ) {\n      const newArr = tracks.map(track => {\n        return <SongCard key={track.id} track={track}/>\n      })\n    }\n  }\n\n  renderPlaylistCard = () => {\n    const playlists = this.state.playlistsArr\n      if (playlists.length > 0) {\n        const newArr = playlists.map( playlist => {\n        return <PlaylistCard key={playlist.id} playlist={playlist} selectedPlaylistCard={this.props.selectedPlaylistCard}/>\n        })\n        return newArr\n      }else {\n        return <h1>No data</h1>\n      }\n  }\n\n  render(){\n    console.log(\"SongList\", this.state.songs);\n    return(\n      <div>\n      <h1>Song List</h1>\n      {this.handleDisplayingTracks()}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SongList);\n"]},"metadata":{},"sourceType":"module"}