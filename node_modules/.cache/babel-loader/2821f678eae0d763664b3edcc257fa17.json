{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/Example.js\";\nimport React from 'react';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$component) {\n  _inherits(Example, _React$component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"realtime-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"waveform-realtime\",\n        width: \"800\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Example;\n}(React.component);\n\nexport default Example; // waveforms\n\nvar mediaRecorderDataChunks = [];\nvar realtimeCanvas = document.getElementById('waveform-realtime');\nvar recordingCanvas = document.getElementById('waveform-recording');\nvar recordingContainer = document.getElementById('recording-container');\n\nvar gotUserAudio = function gotUserAudio(stream) {\n  var audioCtx = new AudioContext();\n  var source = audioCtx.createMediaStreamSource(stream);\n  var analyser = audioCtx.createAnalyser();\n  source.connect(analyser);\n  var drawVisual;\n  visualizeRealtime(stream, realtimeCanvas);\n  visualizeRecording(stream, recordingCanvas); // visualize realtime waveform\n\n  function visualizeRealtime(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount; // half the FFT value\n\n    var dataArray = new Uint8Array(bufferLength); // create an array to store the data\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getByteTimeDomainData(dataArray);\n      canvasCtx.fillStyle = '#1A1629';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#FFF';\n      canvasCtx.beginPath();\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height / 2;\n\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    }\n\n    ;\n    draw();\n  } // visualize stream audio recording style\n\n\n  function visualizeRecording(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = new Float32Array(bufferLength);\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    canvasCtx.fillStyle = '#1A1629';\n    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n    var x = 0;\n\n    function draw() {\n      if (x >= canvas.width) {\n        var tempWave = canvas.toDataURL('image/png');\n        var img = new Image();\n\n        img.onload = function () {\n          // set canvas size\n          canvas.width++;\n          canvasCtx.fillStyle = '#1A1629';\n          canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n          canvasCtx.drawImage(img, 0, 0); // todo make sure canvas is inside div and scrolled to end\n\n          strokeWave();\n        };\n\n        img.src = tempWave;\n      } else {\n        strokeWave();\n      }\n    }\n\n    ;\n    draw();\n\n    function strokeWave() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getFloatTimeDomainData(dataArray);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#fff';\n      canvasCtx.beginPath();\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] * 128.0;\n        var y = canvas.height / 2 + v;\n        canvasCtx.lineTo(x, y);\n      }\n\n      canvasCtx.stroke();\n      x++;\n    }\n  }\n}; // start stream on page load!\n\n\nnavigator.mediaDevices.getUserMedia({\n  audio: true,\n  video: false\n}).then(gotUserAudio).catch(function (err) {\n  return console.log('gotLocalMediaStream error', err);\n});","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/Example.js"],"names":["React","Example","component","mediaRecorderDataChunks","realtimeCanvas","document","getElementById","recordingCanvas","recordingContainer","gotUserAudio","stream","audioCtx","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","connect","drawVisual","visualizeRealtime","visualizeRecording","canvas","canvasCtx","getContext","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","clearRect","width","height","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","Float32Array","tempWave","toDataURL","img","Image","onload","drawImage","strokeWave","src","getFloatTimeDomainData","navigator","mediaDevices","getUserMedia","audio","video","then","catch","err","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Example extends React.component{\n  render(){\n    return(\n      <div>\n      <p id=\"realtime-container\">\n        <canvas id=\"waveform-realtime\" width=\"800\"></canvas>\n      </p>\n      </div>\n    )\n  }\n}\nexport default Example;\n\n// waveforms\nvar mediaRecorderDataChunks = [];\nvar realtimeCanvas = document.getElementById('waveform-realtime');\nvar recordingCanvas = document.getElementById('waveform-recording');\nvar recordingContainer = document.getElementById('recording-container');\n\nvar gotUserAudio = function(stream) {\n\n  var audioCtx = new AudioContext();\n  var source = audioCtx.createMediaStreamSource(stream);\n  var analyser = audioCtx.createAnalyser();\n  source.connect(analyser);\n\n  var drawVisual;\n  visualizeRealtime(stream, realtimeCanvas);\n  visualizeRecording(stream, recordingCanvas);\n\n  // visualize realtime waveform\n  function visualizeRealtime(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount; // half the FFT value\n    var dataArray = new Uint8Array(bufferLength); // create an array to store the data\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = '#1A1629';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#FFF';\n      canvasCtx.beginPath();\n\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n\n      for(var i = 0; i < bufferLength; i++) {\n\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height/2;\n\n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  }\n\n  // visualize stream audio recording style\n  function visualizeRecording(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = new Float32Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    canvasCtx.fillStyle = '#1A1629';\n    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n\n    var x = 0;\n\n    function draw() {\n      if ( x >= canvas.width ) {\n        var tempWave = canvas.toDataURL('image/png');\n        var img = new Image();\n        img.onload = function() {\n          // set canvas size\n          canvas.width++;\n          canvasCtx.fillStyle = '#1A1629';\n          canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n          canvasCtx.drawImage(img, 0, 0);\n\n          // todo make sure canvas is inside div and scrolled to end\n\n          strokeWave();\n        }\n        img.src = tempWave;\n      }\n      else {\n        strokeWave();\n      }\n    };\n\n    draw();\n\n    function strokeWave() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getFloatTimeDomainData(dataArray);\n\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#fff';\n      canvasCtx.beginPath();\n\n      for(var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] * 128.0;\n        var y = canvas.height/2 + v;\n        canvasCtx.lineTo(x, y);\n      }\n\n      canvasCtx.stroke();\n      x++;\n    }\n  }\n\n}\n\n// start stream on page load!\nnavigator.mediaDevices\n    .getUserMedia({ audio: true, video: false })\n    .then(gotUserAudio)\n    .catch(err => console.log('gotLocalMediaStream error', err));\n"]},"metadata":{},"sourceType":"module"}