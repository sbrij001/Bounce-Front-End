{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PureComponents/PlayButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport SoundCloudAudio from 'soundcloud-audio';\nimport { PlayIconSVG, PauseIconSVG } from './Icons';\n\nvar PlayButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayButton, _Component);\n\n  function PlayButton() {\n    _classCallCheck(this, PlayButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayButton).apply(this, arguments));\n  }\n\n  _createClass(PlayButton, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n          playing = _this$props.playing,\n          seeking = _this$props.seeking;\n      return playing !== nextProps.playing || seeking !== nextProps.seeking;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _this$props2 = this.props,\n          playing = _this$props2.playing,\n          soundCloudAudio = _this$props2.soundCloudAudio,\n          onTogglePlay = _this$props2.onTogglePlay;\n\n      if (!playing) {\n        soundCloudAudio && soundCloudAudio.play({\n          playlistIndex: soundCloudAudio._playlistIndex\n        });\n      } else {\n        soundCloudAudio && soundCloudAudio.pause();\n      }\n\n      onTogglePlay && onTogglePlay(e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          playing = _this$props3.playing,\n          seekingIcon = _this$props3.seekingIcon,\n          seeking = _this$props3.seeking,\n          className = _this$props3.className,\n          style = _this$props3.style;\n      var iconNode;\n\n      if (seeking && seekingIcon) {\n        iconNode = React.cloneElement(seekingIcon);\n      } else if (playing) {\n        iconNode = React.createElement(PauseIconSVG, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      } else {\n        iconNode = React.createElement(PlayIconSVG, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }\n\n      var classNames = ClassNames('sb-soundplayer-btn sb-soundplayer-play-btn', className);\n      return React.createElement(\"button\", {\n        type: \"button\",\n        className: classNames,\n        style: style,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, iconNode);\n    }\n  }]);\n\n  return PlayButton;\n}(Component);\n\nPlayButton.propTypes = {\n  className: PropTypes.string,\n  seeking: PropTypes.bool,\n  playing: PropTypes.bool,\n  onTogglePlay: PropTypes.func,\n  seekingIcon: PropTypes.node,\n  soundCloudAudio: PropTypes.instanceOf(SoundCloudAudio)\n};\nPlayButton.defaultProps = {\n  playing: false,\n  seeking: false\n};\nexport default PlayButton;","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PureComponents/PlayButton.js"],"names":["React","Component","PropTypes","ClassNames","SoundCloudAudio","PlayIconSVG","PauseIconSVG","PlayButton","nextProps","props","playing","seeking","e","soundCloudAudio","onTogglePlay","play","playlistIndex","_playlistIndex","pause","seekingIcon","className","style","iconNode","cloneElement","classNames","handleClick","propTypes","string","bool","func","node","instanceOf","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,SAA1C;;IAEMC,U;;;;;;;;;;;;;0CACkBC,S,EAAW;AAAA,wBACF,KAAKC,KADH;AAAA,UACvBC,OADuB,eACvBA,OADuB;AAAA,UACdC,OADc,eACdA,OADc;AAG/B,aACED,OAAO,KAAKF,SAAS,CAACE,OAAtB,IAAiCC,OAAO,KAAKH,SAAS,CAACG,OADzD;AAGD;;;gCAEWC,C,EAAG;AAAA,yBACsC,KAAKH,KAD3C;AAAA,UACLC,OADK,gBACLA,OADK;AAAA,UACIG,eADJ,gBACIA,eADJ;AAAA,UACqBC,YADrB,gBACqBA,YADrB;;AAGb,UAAI,CAACJ,OAAL,EAAc;AACZG,QAAAA,eAAe,IAAIA,eAAe,CAACE,IAAhB,CAAqB;AACtCC,UAAAA,aAAa,EAAEH,eAAe,CAACI;AADO,SAArB,CAAnB;AAGD,OAJD,MAIO;AACLJ,QAAAA,eAAe,IAAIA,eAAe,CAACK,KAAhB,EAAnB;AACD;;AAEDJ,MAAAA,YAAY,IAAIA,YAAY,CAACF,CAAD,CAA5B;AACD;;;6BAEQ;AAAA,yBACqD,KAAKH,KAD1D;AAAA,UACCC,OADD,gBACCA,OADD;AAAA,UACUS,WADV,gBACUA,WADV;AAAA,UACuBR,OADvB,gBACuBA,OADvB;AAAA,UACgCS,SADhC,gBACgCA,SADhC;AAAA,UAC2CC,KAD3C,gBAC2CA,KAD3C;AAGP,UAAIC,QAAJ;;AAEA,UAAIX,OAAO,IAAIQ,WAAf,EAA4B;AAC1BG,QAAAA,QAAQ,GAAGtB,KAAK,CAACuB,YAAN,CAAmBJ,WAAnB,CAAX;AACD,OAFD,MAEO,IAAIT,OAAJ,EAAa;AAClBY,QAAAA,QAAQ,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACD,OAFM,MAEA;AACLA,QAAAA,QAAQ,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACD;;AAED,UAAME,UAAU,GAAGrB,UAAU,CAAC,4CAAD,EAA+CiB,SAA/C,CAA7B;AAEA,aACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEI,UAAjC;AAA6C,QAAA,KAAK,EAAEH,KAApD;AAA2D,QAAA,OAAO,EAAE,KAAKI,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,QADH,CADF;AAKD;;;;EA3CsBrB,S;;AA8CzBM,UAAU,CAACmB,SAAX,GAAuB;AACrBN,EAAAA,SAAS,EAAElB,SAAS,CAACyB,MADA;AAErBhB,EAAAA,OAAO,EAAET,SAAS,CAAC0B,IAFE;AAGrBlB,EAAAA,OAAO,EAAER,SAAS,CAAC0B,IAHE;AAIrBd,EAAAA,YAAY,EAAEZ,SAAS,CAAC2B,IAJH;AAKrBV,EAAAA,WAAW,EAAEjB,SAAS,CAAC4B,IALF;AAMrBjB,EAAAA,eAAe,EAAEX,SAAS,CAAC6B,UAAV,CAAqB3B,eAArB;AANI,CAAvB;AASAG,UAAU,CAACyB,YAAX,GAA0B;AACxBtB,EAAAA,OAAO,EAAE,KADe;AAExBC,EAAAA,OAAO,EAAE;AAFe,CAA1B;AAKA,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport SoundCloudAudio from 'soundcloud-audio';\nimport { PlayIconSVG, PauseIconSVG } from './Icons';\n\nclass PlayButton extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { playing, seeking } = this.props;\n\n    return (\n      playing !== nextProps.playing || seeking !== nextProps.seeking\n    );\n  }\n\n  handleClick(e) {\n    const { playing, soundCloudAudio, onTogglePlay } = this.props;\n\n    if (!playing) {\n      soundCloudAudio && soundCloudAudio.play({\n        playlistIndex: soundCloudAudio._playlistIndex\n      });\n    } else {\n      soundCloudAudio && soundCloudAudio.pause();\n    }\n\n    onTogglePlay && onTogglePlay(e);\n  }\n\n  render() {\n    const { playing, seekingIcon, seeking, className, style } = this.props;\n\n    let iconNode;\n\n    if (seeking && seekingIcon) {\n      iconNode = React.cloneElement(seekingIcon);\n    } else if (playing) {\n      iconNode = <PauseIconSVG />;\n    } else {\n      iconNode = <PlayIconSVG />;\n    }\n\n    const classNames = ClassNames('sb-soundplayer-btn sb-soundplayer-play-btn', className);\n\n    return (\n      <button type=\"button\" className={classNames} style={style} onClick={this.handleClick}>\n        {iconNode}\n      </button>\n    );\n  }\n}\n\nPlayButton.propTypes = {\n  className: PropTypes.string,\n  seeking: PropTypes.bool,\n  playing: PropTypes.bool,\n  onTogglePlay: PropTypes.func,\n  seekingIcon: PropTypes.node,\n  soundCloudAudio: PropTypes.instanceOf(SoundCloudAudio)\n};\n\nPlayButton.defaultProps = {\n  playing: false,\n  seeking: false\n};\n\nexport default PlayButton;\n"]},"metadata":{},"sourceType":"module"}