{"ast":null,"code":"import _defineProperty from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongDetail.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nvar SongDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SongDetail, _React$Component);\n\n  function SongDetail() {\n    var _getPrototypeOf2, _this$state;\n\n    var _this;\n\n    _classCallCheck(this, SongDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SongDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = (_this$state = {\n      playing: false,\n      playingURL: \"\",\n      audio: null\n    }, _defineProperty(_this$state, \"playing\", false), _defineProperty(_this$state, \"title\", ''), _this$state);\n    return _this;\n  }\n\n  _createClass(SongDetail, [{\n    key: \"playAudio\",\n    value: function playAudio(previewURL) {\n      var audio = new Audio(previewURL);\n      audio.play();\n      this.setState({\n        playing: true,\n        playingURL: previewURL,\n        audio: audio\n      });\n    }\n  }, {\n    key: \"pauseAudio\",\n    value: function pauseAudio(previewURL) {\n      var _this2 = this;\n\n      console.log(\"pause audio\");\n      var audio = new Audio(previewURL);\n\n      if (this.state.playingURL === previewURL) {\n        this.state.audio.pause();\n        this.setState({\n          playing: false\n        }, function () {\n          return console.log(\"set playing to false\", _this2.state.playing);\n        });\n      }\n    } //\n    // handleChange = e => {\n    //   this.setState({ title: e.target.value })\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('song detail', this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Song Details\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Name: \", this.props.currentSong.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Album: \", this.props.currentSong.albumName), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.playAudio(_this3.props.currentSong.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.pauseAudio(_this3.props.currentSong.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"PAUSE\"));\n    }\n  }]);\n\n  return SongDetail;\n}(React.Component);\n\nexport default withRouter(SongDetail); // waveforms\n\nvar mediaRecorderDataChunks = [];\nvar realtimeCanvas = document.getElementById('waveform-realtime');\nvar recordingCanvas = document.getElementById('waveform-recording');\nvar recordingContainer = document.getElementById('recording-container');\n\nvar gotUserAudio = function gotUserAudio(stream) {\n  var audioCtx = new AudioContext();\n  var source = audioCtx.createMediaStreamSource(stream);\n  var analyser = audioCtx.createAnalyser();\n  source.connect(analyser);\n  var drawVisual;\n  visualizeRealtime(stream, realtimeCanvas);\n  visualizeRecording(stream, recordingCanvas); // visualize realtime waveform\n\n  function visualizeRealtime(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount; // half the FFT value\n\n    var dataArray = new Uint8Array(bufferLength); // create an array to store the data\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getByteTimeDomainData(dataArray);\n      canvasCtx.fillStyle = '#1A1629';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#FFF';\n      canvasCtx.beginPath();\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height / 2;\n\n        if (i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height / 2);\n      canvasCtx.stroke();\n    }\n\n    ;\n    draw();\n  } // visualize stream audio recording style\n\n\n  function visualizeRecording(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = new Float32Array(bufferLength);\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    canvasCtx.fillStyle = '#1A1629';\n    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n    var x = 0;\n\n    function draw() {\n      if (x >= canvas.width) {\n        var tempWave = canvas.toDataURL('image/png');\n        var img = new Image();\n\n        img.onload = function () {\n          // set canvas size\n          canvas.width++;\n          canvasCtx.fillStyle = '#1A1629';\n          canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n          canvasCtx.drawImage(img, 0, 0); // todo make sure canvas is inside div and scrolled to end\n\n          strokeWave();\n        };\n\n        img.src = tempWave;\n      } else {\n        strokeWave();\n      }\n    }\n\n    ;\n    draw();\n\n    function strokeWave() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getFloatTimeDomainData(dataArray);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#fff';\n      canvasCtx.beginPath();\n\n      for (var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] * 128.0;\n        var y = canvas.height / 2 + v;\n        canvasCtx.lineTo(x, y);\n      }\n\n      canvasCtx.stroke();\n      x++;\n    }\n  }\n}; // start stream on page load!\n\n\nnavigator.mediaDevices.getUserMedia({\n  audio: true,\n  video: false\n}).then(gotUserAudio).catch(function (err) {\n  return console.log('gotLocalMediaStream error', err);\n});","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongDetail.js"],"names":["React","withRouter","SongDetail","state","playing","playingURL","audio","previewURL","Audio","play","setState","console","log","pause","props","currentSong","name","albumName","playAudio","pauseAudio","Component","mediaRecorderDataChunks","realtimeCanvas","document","getElementById","recordingCanvas","recordingContainer","gotUserAudio","stream","audioCtx","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","connect","drawVisual","visualizeRealtime","visualizeRecording","canvas","canvasCtx","getContext","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","clearRect","width","height","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","Float32Array","tempWave","toDataURL","img","Image","onload","drawImage","strokeWave","src","getFloatTimeDomainData","navigator","mediaDevices","getUserMedia","video","then","catch","err"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom';\n\n\nclass SongDetail extends React.Component{\n  state = {\n    playing: false,\n    playingURL: \"\",\n    audio: null,\n    playing: false,\n    title: ''\n  }\n\n  playAudio(previewURL){\n    let audio = new Audio(previewURL)\n    audio.play()\n    this.setState({\n      playing: true,\n      playingURL: previewURL,\n      audio: audio\n    })\n  }\n\n  pauseAudio(previewURL){\n    console.log(\"pause audio\")\n    let audio = new Audio(previewURL)\n    if (this.state.playingURL === previewURL) {\n      this.state.audio.pause()\n      this.setState({\n        playing: false\n      }, ()=>console.log(\"set playing to false\",this.state.playing))\n    }\n  }\n  //\n  // handleChange = e => {\n  //   this.setState({ title: e.target.value })\n  // };\n\n  render(){\n    console.log('song detail', this.props);\n    return(\n      <div>\n        <h1>Song Details</h1>\n        <h2>Name: {this.props.currentSong.name}</h2>\n        <h3>Album: {this.props.currentSong.albumName}</h3>\n        <button onClick={ () => this.playAudio(this.props.currentSong.previewURL) }>PLAY</button>\n        <button onClick={ () => this.pauseAudio(this.props.currentSong.previewURL) }>PAUSE</button>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SongDetail);\n\n// waveforms\nvar mediaRecorderDataChunks = [];\nvar realtimeCanvas = document.getElementById('waveform-realtime');\nvar recordingCanvas = document.getElementById('waveform-recording');\nvar recordingContainer = document.getElementById('recording-container');\n\nvar gotUserAudio = function(stream) {\n\n  var audioCtx = new AudioContext();\n  var source = audioCtx.createMediaStreamSource(stream);\n  var analyser = audioCtx.createAnalyser();\n  source.connect(analyser);\n\n  var drawVisual;\n  visualizeRealtime(stream, realtimeCanvas);\n  visualizeRecording(stream, recordingCanvas);\n\n  // visualize realtime waveform\n  function visualizeRealtime(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount; // half the FFT value\n    var dataArray = new Uint8Array(bufferLength); // create an array to store the data\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n\n    function draw() {\n      drawVisual = requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      canvasCtx.fillStyle = '#1A1629';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#FFF';\n      canvasCtx.beginPath();\n\n      var sliceWidth = canvas.width * 1.0 / bufferLength;\n      var x = 0;\n\n      for(var i = 0; i < bufferLength; i++) {\n\n        var v = dataArray[i] / 128.0;\n        var y = v * canvas.height/2;\n\n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n    };\n\n    draw();\n  }\n\n  // visualize stream audio recording style\n  function visualizeRecording(stream, canvas) {\n    var canvasCtx = canvas.getContext('2d');\n\n    analyser.fftSize = 2048;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = new Float32Array(bufferLength);\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    canvasCtx.fillStyle = '#1A1629';\n    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n\n    var x = 0;\n\n    function draw() {\n      if ( x >= canvas.width ) {\n        var tempWave = canvas.toDataURL('image/png');\n        var img = new Image();\n        img.onload = function() {\n          // set canvas size\n          canvas.width++;\n          canvasCtx.fillStyle = '#1A1629';\n          canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n          canvasCtx.drawImage(img, 0, 0);\n\n          // todo make sure canvas is inside div and scrolled to end\n\n          strokeWave();\n        }\n        img.src = tempWave;\n      }\n      else {\n        strokeWave();\n      }\n    };\n\n    draw();\n\n    function strokeWave() {\n      drawVisual = requestAnimationFrame(draw);\n      analyser.getFloatTimeDomainData(dataArray);\n\n      canvasCtx.lineWidth = 1;\n      canvasCtx.strokeStyle = '#fff';\n      canvasCtx.beginPath();\n\n      for(var i = 0; i < bufferLength; i++) {\n        var v = dataArray[i] * 128.0;\n        var y = canvas.height/2 + v;\n        canvasCtx.lineTo(x, y);\n      }\n\n      canvasCtx.stroke();\n      x++;\n    }\n  }\n\n}\n\n// start stream on page load!\nnavigator.mediaDevices\n    .getUserMedia({ audio: true, video: false })\n    .then(gotUserAudio)\n    .catch(err => console.log('gotLocalMediaStream error', err));\n"]},"metadata":{},"sourceType":"module"}