{"ast":null,"code":"import _toConsumableArray from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from \"react-router-dom\"; //Components\n//need to have both the route and switch\n//Switch stops at the first match\n\nimport Home from './components/Home';\nimport WebplayerList from './components/WebplayerList';\nimport WebPlayer from './components/WebPlayer';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport MapBox from './components/MapBox';\nimport SongList from './components/SongList';\nimport SongCard from './components/SongCard';\nimport SongDetail from './components/SongDetail';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport NavBar from './components/NavBar';\nimport NewNav from './components/NewNav';\nimport Header from './components/Header'; //css\n\nimport './App.css';\nimport { Gradient } from 'react-gradient';\nimport { gradients } from './components/gradient';\nimport \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/style/sass/components/navigation.scss\"; // <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: {},\n      currentPlaylist: {},\n      currentSong: {},\n      userPlaylists: [],\n      track: [] //allows the user to stay logged in\n      // if user? take the token from localStorage and send in to the backend\n      // check to see if there is a user\n      // if there is a user fetch to current_user\n      //add the key Authorization that is recieving the token\n      //change this.props.history.push(\"/albums\") to the user view page when finished with albums\n\n    };\n\n    _this.componentDidMount = function () {\n      var token = localStorage.token;\n      token ? fetch(\"http://localhost:3000/api/v1/current_user\", {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\",\n          Authorization: \"Bearer \".concat(token)\n        }\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (_ref) {\n        var user = _ref.user;\n        debugger;\n\n        _this.setState({\n          user: user\n        }, function () {\n          _this.props.history.push(\"/header\");\n        });\n      }) : _this.props.history.push(\"/login\");\n    };\n\n    _this.handleSubmitForSignUp = function (userData) {\n      console.log(userData);\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        _this.setState({\n          user: userInfo.user\n        }, function () {\n          localStorage.setItem(\"token\", userInfo.jwt);\n\n          _this.props.history.push(\"/playlists\");\n        });\n      });\n    };\n\n    _this.handleSubmitForLogin = function (userData) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        // console.log(userInfo)\n        localStorage.token = userInfo.jwt;\n\n        _this.setState({\n          user: userInfo.user\n        }, function () {\n          return _this.props.history.push(\"/header\");\n        });\n      });\n    };\n\n    _this.selectedPlaylistCard = function (playlistObj) {\n      _this.setState({\n        currentPlaylist: playlistObj\n      });\n    };\n\n    _this.selectedTrackCard = function (trackObj) {\n      _this.setState({\n        currentSong: trackObj\n      });\n    };\n\n    _this.addPlayistToUser = function (playlist) {\n      _this.setState({\n        userPlaylists: [playlist].concat(_toConsumableArray(_this.state.userPlaylists))\n      });\n    };\n\n    _this.handleClickForPostingSongToWebplayer = function (track) {\n      _this.setState({\n        track: track\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // afterSelectPlaylistCard=()=>{\n    //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    //   debugger\n    //   let href = this.state.currentPlaylist.links.tracks.href\n    //   let url = ''\n    //   if (!!href){\n    //     url = `${href}${apiKey}`\n    //   }\n    //   console.log(this.state);\n    //   url\n    //   ? fetch(url)\n    //   .then(resp => resp.json())\n    //   .then(tracksData => {\n    //     this.setState({\n    //       trackList: tracksData.tracks\n    //     })\n    //   })\n    //   : console.log('hi');\n    // }\n    //\n    // selectedPlaylistCard = (playlistObj) => {\n    //   this.setState({\n    //     currentPlaylist: playlistObj\n    //   }, console.log(this.state))\n    //   this.afterSelectPlaylistCard(playlistObj)\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      //console.log('app state', this.state)\n      //browser router listens for the change in route and tells the application what to do based on the route.\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Gradient, {\n        gradients: gradients.disgust // required\n        ,\n        property: \"background\",\n        duration: 3000,\n        angle: \"45deg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/playlists/:name/:songname\",\n        render: function render() {\n          return React.createElement(SongDetail, {\n            currentSong: _this2.state.currentSong,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/playlists/:name\",\n        render: function render() {\n          return React.createElement(SongList, {\n            currentPlaylist: _this2.state.currentPlaylist,\n            trackList: _this2.state.trackList,\n            selectedTrackCard: _this2.selectedTrackCard,\n            user: _this2.state.user,\n            handleClickForPostingSongToWebplayer: _this2.handleClickForPostingSongToWebplayer,\n            addPlayistToUser: _this2.addPlayistToUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/header\",\n        render: function render() {\n          return React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/playlists\",\n        render: function render() {\n          return React.createElement(PlaylistContainer, {\n            user: _this2.state.user,\n            selectedPlaylistCard: _this2.selectedPlaylistCard,\n            handleClickForPostingSongToWebplayer: _this2.handleClickForPostingSongToWebplayer,\n            currentPlaylist: _this2.state.currentPlaylist,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/webplayerlist\",\n        render: function render() {\n          return React.createElement(WebplayerList, {\n            currentPlaylist: _this2.state.currentPlaylist,\n            currentSong: _this2.state.currentSong,\n            user: _this2.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/webplayer\",\n        render: function render() {\n          return React.createElement(WebPlayer, {\n            user: _this2.state.user || {},\n            currentPlaylist: _this2.state.currentPlaylist,\n            selectedPlaylistCard: _this2.selectedPlaylistCard,\n            handleClickForPostingSongToWebplayer: _this2.handleClickForPostingSongToWebplayer,\n            addPlayistToUser: _this2.addPlayistToUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: function render() {\n          return React.createElement(SignUp, {\n            handleSubmitForSignUp: _this2.handleSubmitForSignUp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(Login, {\n            handleSubmitForLogin: _this2.handleSubmitForLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render() {\n          return React.createElement(Home, {\n            user: _this2.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: Error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js"],"names":["React","Component","Route","Switch","withRouter","Home","WebplayerList","WebPlayer","PlaylistContainer","MapBox","SongList","SongCard","SongDetail","SignUp","Login","Error","NavBar","NewNav","Header","Gradient","gradients","App","state","user","currentPlaylist","currentSong","userPlaylists","track","componentDidMount","token","localStorage","fetch","method","headers","accepts","Authorization","then","resp","json","setState","props","history","push","handleSubmitForSignUp","userData","console","log","body","JSON","stringify","userInfo","setItem","jwt","handleSubmitForLogin","selectedPlaylistCard","playlistObj","selectedTrackCard","trackObj","addPlayistToUser","playlist","handleClickForPostingSongToWebplayer","disgust","trackList"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C,C,CAGA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAO,6GAAP,C,CAEA;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,eAAe,EAAC,EAFV;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,KAAK,EAAE,EALD,CAOR;AACA;AACA;AACA;AACA;AACA;;AAZQ,K;;UAcRC,iB,GAAoB,YAAM;AACxB,UAAIC,KAAK,GAAGC,YAAY,CAACD,KAAzB;AACAA,MAAAA,KAAK,GACFE,KAAK,CAAC,2CAAD,EAA6C;AACjDC,QAAAA,MAAM,EAAE,KADyC;AAEjDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,OAAO,EAAE,kBAFF;AAGPC,UAAAA,aAAa,mBAAYN,KAAZ;AAHN;AAFwC,OAA7C,CAAL,CAQAO,IARA,CAQM,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OARV,EASAF,IATA,CASK,gBAAY;AAAA,YAAVb,IAAU,QAAVA,IAAU;AAChB;;AACA,cAAKgB,QAAL,CAAc;AAAChB,UAAAA,IAAI,EAAEA;AAAP,SAAd,EAA6B,YAAM;AACjC,gBAAKiB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,SAFD;AAGD,OAdA,CADE,GAgBF,MAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAhBH;AAiBD,K;;UAGDC,qB,GAAwB,UAACC,QAAD,EAAc;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAb,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAFiC;AAM1Ca,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE1B,UAAAA,IAAI,EAAEqB;AAAR,SAAf;AANoC,OAAvC,CAAL,CAQCR,IARD,CAQM,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OARV,EASCF,IATD,CASM,UAAAc,QAAQ,EAAI;AAChB,cAAKX,QAAL,CAAc;AAAEhB,UAAAA,IAAI,EAAE2B,QAAQ,CAAC3B;AAAjB,SAAd,EAAuC,YAAM;AAC3CO,UAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BD,QAAQ,CAACE,GAAvC;;AACA,gBAAKZ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,SAHD;AAID,OAdD;AAeD,K;;UAEDW,oB,GAAuB,UAACT,QAAD,EAAc;AACnCb,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAF+B;AAMxCa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE1B,UAAAA,IAAI,EAAEqB;AAAR,SAAf;AANkC,OAAvC,CAAL,CAQGR,IARH,CAQQ,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OARZ,EASGF,IATH,CASQ,UAAAc,QAAQ,EAAI;AACd;AACApB,QAAAA,YAAY,CAACD,KAAb,GAAqBqB,QAAQ,CAACE,GAA9B;;AACA,cAAKb,QAAL,CAAc;AAAEhB,UAAAA,IAAI,EAAE2B,QAAQ,CAAC3B;AAAjB,SAAd,EACA;AAAA,iBAAM,MAAKiB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB,CAAN;AAAA,SADA;AAEH,OAdH;AAeC,K;;UAEHY,oB,GAAuB,UAACC,WAAD,EAAiB;AACtC,YAAKhB,QAAL,CAAc;AACZf,QAAAA,eAAe,EAAE+B;AADL,OAAd;AAGD,K;;UAEDC,iB,GAAoB,UAACC,QAAD,EAAc;AAChC,YAAKlB,QAAL,CAAc;AACZd,QAAAA,WAAW,EAAEgC;AADD,OAAd;AAGD,K;;UAEDC,gB,GAAmB,UAACC,QAAD,EAAc;AAC/B,YAAKpB,QAAL,CAAc;AACZb,QAAAA,aAAa,GAAGiC,QAAH,4BAAgB,MAAKrC,KAAL,CAAWI,aAA3B;AADD,OAAd;AAGD,K;;UAEDkC,oC,GAAuC,UAACjC,KAAD,EAAW;AAChD,YAAKY,QAAL,CAAc;AACZZ,QAAAA,KAAK,EAACA;AADM,OAAd;AAGD,K;;;;;;;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAGS;AAAA;;AAEP;AAEA;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AACA,QAAA,SAAS,EAAEP,SAAS,CAACyC,OADrB,CAC8B;AAD9B;AAEA,QAAA,QAAQ,EAAC,YAFT;AAGA,QAAA,QAAQ,EAAE,IAHV;AAIA,QAAA,KAAK,EAAC,OAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,4BAAZ;AACE,QAAA,MAAM,EAAE;AAAA,iBAAK,oBAAC,UAAD;AAAY,YAAA,WAAW,EAAE,MAAI,CAACvC,KAAL,CAAWG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,kBAAZ;AACE,QAAA,MAAM,EAAE;AAAA,iBAAK,oBAAC,QAAD;AAAU,YAAA,eAAe,EAAE,MAAI,CAACH,KAAL,CAAWE,eAAtC;AAAuD,YAAA,SAAS,EAAE,MAAI,CAACF,KAAL,CAAWwC,SAA7E;AAAwF,YAAA,iBAAiB,EAAE,MAAI,CAACN,iBAAhH;AAAmI,YAAA,IAAI,EAAE,MAAI,CAAClC,KAAL,CAAWC,IAApJ;AAA4J,YAAA,oCAAoC,EAAE,MAAI,CAACqC,oCAAvM;AAA6O,YAAA,gBAAgB,EAAE,MAAI,CAACF,gBAApQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AACE,QAAA,MAAM,EAAE;AAAA,iBAAK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AACE,QAAA,MAAM,EAAE;AAAA,iBAAK,oBAAC,iBAAD;AAAmB,YAAA,IAAI,EAAE,MAAI,CAACpC,KAAL,CAAWC,IAApC;AAA0C,YAAA,oBAAoB,EAAE,MAAI,CAAC+B,oBAArE;AAA2F,YAAA,oCAAoC,EAAE,MAAI,CAACM,oCAAtI;AAA4K,YAAA,eAAe,EAAE,MAAI,CAACtC,KAAL,CAAWE,eAAxM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EASE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AACQ,QAAA,IAAI,EAAC,gBADb;AAEE,QAAA,MAAM,EAAE;AAAA,iBAAM,oBAAC,aAAD;AAAe,YAAA,eAAe,EAAE,MAAI,CAACF,KAAL,CAAWE,eAA3C;AAA4D,YAAA,WAAW,EAAE,MAAI,CAACF,KAAL,CAAWG,WAApF;AAAiG,YAAA,IAAI,EAAE,MAAI,CAACH,KAAL,CAAWC,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAYE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AACQ,QAAA,IAAI,EAAC,YADb;AAEE,QAAA,MAAM,EAAE;AAAA,iBAAM,oBAAC,SAAD;AAAW,YAAA,IAAI,EAAE,MAAI,CAACD,KAAL,CAAWC,IAAX,IAAmB,EAApC;AAAwC,YAAA,eAAe,EAAE,MAAI,CAACD,KAAL,CAAWE,eAApE;AAAqF,YAAA,oBAAoB,EAAE,MAAI,CAAC8B,oBAAhH;AAAsI,YAAA,oCAAoC,EAAE,MAAI,CAACM,oCAAjL;AAAuN,YAAA,gBAAgB,EAAE,MAAI,CAACF,gBAA9O;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAeE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AACQ,QAAA,IAAI,EAAC,SADb;AAEE,QAAA,MAAM,EAAG;AAAA,iBAAM,oBAAC,MAAD;AAAQ,YAAA,qBAAqB,EAAE,MAAI,CAACf,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAkBE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AACQ,QAAA,IAAI,EAAC,QADb;AAEE,QAAA,MAAM,EAAG;AAAA,iBAAM,oBAAC,KAAD;AAAO,YAAA,oBAAoB,EAAE,MAAI,CAACU,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAqBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,MAAM,EAAG;AAAA,iBAAM,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAE,MAAI,CAAC/B,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,EAwBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,SAAS,EAAER,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,CANA,CAFF,CADF;AAwCD;;;;EA1Ked,S;;AA6KlB,eAAeG,UAAU,CAACiB,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\n\n//Components\n//need to have both the route and switch\n//Switch stops at the first match\nimport Home from './components/Home';\nimport WebplayerList from './components/WebplayerList';\nimport WebPlayer from './components/WebPlayer';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport MapBox from './components/MapBox';\nimport SongList from './components/SongList';\nimport SongCard from './components/SongCard';\nimport SongDetail from './components/SongDetail';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport NavBar from './components/NavBar';\nimport NewNav from './components/NewNav'\nimport Header from './components/Header';\n\n//css\nimport './App.css';\nimport {Gradient} from 'react-gradient';\nimport {gradients} from './components/gradient';\nimport \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/style/sass/components/navigation.scss\"\n\n// <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\nclass App extends Component {\n  state = {\n    user: {},\n    currentPlaylist:{},\n    currentSong: {},\n    userPlaylists: [],\n    track: []\n  }\n  //allows the user to stay logged in\n  // if user? take the token from localStorage and send in to the backend\n  // check to see if there is a user\n  // if there is a user fetch to current_user\n  //add the key Authorization that is recieving the token\n  //change this.props.history.push(\"/albums\") to the user view page when finished with albums\n\n  componentDidMount = () => {\n    let token = localStorage.token\n    token\n     ? fetch(\"http://localhost:3000/api/v1/current_user\",{\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then( resp => resp.json())\n      .then(({user}) => {\n        debugger\n        this.setState({user: user }, () => {\n          this.props.history.push(\"/header\")\n        });\n      })\n    : (this.props.history.push(\"/login\"))\n  };\n\n\n  handleSubmitForSignUp = (userData) => {\n    console.log(userData);\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({ user: userData })\n    })\n    .then(resp => resp.json())\n    .then(userInfo => {\n      this.setState({ user: userInfo.user }, () => {\n        localStorage.setItem(\"token\", userInfo.jwt )\n        this.props.history.push(\"/playlists\")\n      });\n    });\n  };\n\n  handleSubmitForLogin = (userData) => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({ user: userData })\n      })\n      .then(resp => resp.json())\n      .then(userInfo => {\n          // console.log(userInfo)\n          localStorage.token = userInfo.jwt\n          this.setState({ user: userInfo.user },\n          () => this.props.history.push(\"/header\"));\n      })\n    }\n\n  selectedPlaylistCard = (playlistObj) => {\n    this.setState({\n      currentPlaylist: playlistObj\n    })\n  }\n\n  selectedTrackCard = (trackObj) => {\n    this.setState({\n      currentSong: trackObj\n    })\n  }\n\n  addPlayistToUser = (playlist) => {\n    this.setState({\n      userPlaylists: [playlist, ...this.state.userPlaylists]\n    })\n  }\n\n  handleClickForPostingSongToWebplayer = (track) => {\n    this.setState({\n      track:track\n    })\n  }\n  // afterSelectPlaylistCard=()=>{\n  //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n  //   debugger\n  //   let href = this.state.currentPlaylist.links.tracks.href\n  //   let url = ''\n  //   if (!!href){\n  //     url = `${href}${apiKey}`\n  //   }\n  //   console.log(this.state);\n  //   url\n  //   ? fetch(url)\n  //   .then(resp => resp.json())\n  //   .then(tracksData => {\n  //     this.setState({\n  //       trackList: tracksData.tracks\n  //     })\n  //   })\n  //   : console.log('hi');\n  // }\n  //\n  // selectedPlaylistCard = (playlistObj) => {\n  //   this.setState({\n  //     currentPlaylist: playlistObj\n  //   }, console.log(this.state))\n  //   this.afterSelectPlaylistCard(playlistObj)\n  // }\n\n\n  render() {\n\n    //console.log('app state', this.state)\n\n    //browser router listens for the change in route and tells the application what to do based on the route.\n    return (\n      <div>\n        <NavBar/>\n        <Gradient\n        gradients={gradients.disgust} // required\n        property=\"background\"\n        duration={3000}\n        angle=\"45deg\"\n        >\n        <Switch>\n          <Route path=\"/playlists/:name/:songname\"\n            render={()=> <SongDetail currentSong={this.state.currentSong} />}/>\n          <Route path=\"/playlists/:name\"\n            render={()=> <SongList currentPlaylist={this.state.currentPlaylist} trackList={this.state.trackList} selectedTrackCard={this.selectedTrackCard} user={this.state.user}   handleClickForPostingSongToWebplayer={this.handleClickForPostingSongToWebplayer} addPlayistToUser={this.addPlayistToUser}/>}/>\n          <Route exact path=\"/header\"\n            render={()=> <Header/> } />\n          <Route exact path=\"/playlists\"\n            render={()=> <PlaylistContainer user={this.state.user} selectedPlaylistCard={this.selectedPlaylistCard} handleClickForPostingSongToWebplayer={this.handleClickForPostingSongToWebplayer} currentPlaylist={this.state.currentPlaylist}/> } />\n          <Route\n            exact path=\"/webplayerlist\"\n            render={() => <WebplayerList currentPlaylist={this.state.currentPlaylist} currentSong={this.state.currentSong} user={this.state.user}/> } />\n          <Route\n            exact path=\"/webplayer\"\n            render={() => <WebPlayer user={this.state.user || {}} currentPlaylist={this.state.currentPlaylist} selectedPlaylistCard={this.selectedPlaylistCard} handleClickForPostingSongToWebplayer={this.handleClickForPostingSongToWebplayer} addPlayistToUser={this.addPlayistToUser}/> } />\n          <Route\n            exact path=\"/signup\"\n            render={ () => <SignUp handleSubmitForSignUp={this.handleSubmitForSignUp}/> } />\n          <Route\n            exact path=\"/login\"\n            render={ () => <Login handleSubmitForLogin={this.handleSubmitForLogin}/> } />\n          <Route\n            path=\"/home\"\n            render={ () => <Home user={this.state.user} /> } />\n          <Route\n            path=\"/\"\n            component={Error} />\n        </Switch>\n          </Gradient>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}