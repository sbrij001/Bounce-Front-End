{"ast":null,"code":"import _toConsumableArray from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\"; //need to have both the route and switch\n//Switch stops at the first match\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport ReactMediaVisualizer from 'react-media-visualizer';\nimport Home from './components/Home';\nimport WebPlayer from './components/WebPlayer';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport AlbumContainer from './components/AlbumContainer';\nimport ArtistContainer from './components/ArtistContainer';\nimport SongList from './components/SongList';\nimport SongCard from './components/SongCard';\nimport SongDetail from './components/SongDetail';\nimport ProfileContainer from './components/ProfileContainer';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport './App.css'; // <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: {},\n      currentPlaylist: {},\n      currentSong: {},\n      userPlaylists: [] //allows the user to stay logged in\n      // if user? take the token from localStorage and send in to the backend\n      // check to see if there is a user\n      // if there is a user fetch to current_user\n      //add the key Authorization that is recieving the token\n      //change this.props.history.push(\"/albums\") to the user view page when finished with albums\n\n    };\n\n    _this.componentDidMount = function () {\n      var token = localStorage.token;\n      console.log(token);\n\n      if (token) {\n        console.log(\"we got the token\");\n      } else {\n        console.log(\"no token\");\n      } // return token\n      //  ? fetch(\"http://localhost:3000/api/v1/current_user\",{\n      //     method: \"GET\",\n      //     headers: {\n      //       \"content-type\": \"application/json\",\n      //       accepts: \"application/json\",\n      //       Authorization: `Bearer ${token}`\n      //     }\n      //   })\n      //   .then( resp => resp.json())\n      //   .then(user => {\n      //     this.setState({user: user }, () => {\n      //       this.props.history.push(\"/webplayer\")\n      //     });\n      //   })\n      // : (this.props.history.push(\"/signup\"))\n\n    };\n\n    _this.handleSubmitForSignUp = function (userData) {\n      console.log(userData);\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        _this.setState({\n          user: userInfo.user\n        }, function () {\n          localStorage.setItem(\"token\", userInfo.jwt);\n\n          _this.props.history.push(\"/playlists\");\n        });\n      });\n    };\n\n    _this.handleSubmitForLogin = function (userData) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        console.log(userInfo);\n\n        _this.setState({\n          user: userInfo.user\n        }, function () {\n          return _this.props.history.push(\"/webplayer\");\n        });\n      });\n    };\n\n    _this.selectedPlaylistCard = function (playlistObj) {\n      _this.setState({\n        currentPlaylist: playlistObj\n      });\n    };\n\n    _this.selectedTrackCard = function (trackObj) {\n      _this.setState({\n        currentSong: trackObj\n      });\n    };\n\n    _this.addPlayistToUser = function (playlist) {\n      _this.setState({\n        userPlaylists: [playlist].concat(_toConsumableArray(_this.state.userPlaylists))\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // afterSelectPlaylistCard=()=>{\n    //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    //   debugger\n    //   let href = this.state.currentPlaylist.links.tracks.href\n    //   let url = ''\n    //   if (!!href){\n    //     url = `${href}${apiKey}`\n    //   }\n    //   console.log(this.state);\n    //   url\n    //   ? fetch(url)\n    //   .then(resp => resp.json())\n    //   .then(tracksData => {\n    //     this.setState({\n    //       trackList: tracksData.tracks\n    //     })\n    //   })\n    //   : console.log('hi');\n    // }\n    //\n    // selectedPlaylistCard = (playlistObj) => {\n    //   this.setState({\n    //     currentPlaylist: playlistObj\n    //   }, console.log(this.state))\n    //   this.afterSelectPlaylistCard(playlistObj)\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      //console.log('app state', this.state)\n      //browser router listens for the change in route and tells the application what to do based on the route.\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/playlists/:name/:songname\",\n        render: function render() {\n          return React.createElement(SongDetail, {\n            currentSong: _this2.state.currentSong,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/playlists/:name\",\n        render: function render() {\n          return React.createElement(SongList, {\n            currentPlaylist: _this2.state.currentPlaylist,\n            trackList: _this2.state.trackList,\n            selectedTrackCard: _this2.selectedTrackCard,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/albums\",\n        render: function render() {\n          return React.createElement(AlbumContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/playlists\",\n        render: function render() {\n          return React.createElement(PlaylistContainer, {\n            user: _this2.state.user,\n            selectedPlaylistCard: _this2.selectedPlaylistCard,\n            addPlayistToUser: _this2.addPlayistToUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/webplayer\",\n        render: function render() {\n          return React.createElement(WebPlayer, {\n            user: _this2.state.user,\n            selectedPlaylistCard: _this2.selectedPlaylistCard,\n            addPlayistToUser: _this2.addPlayistToUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/artists\",\n        render: function render() {\n          return React.createElement(ArtistContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/profiles\",\n        render: function render() {\n          return React.createElement(ProfileContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: function render() {\n          return React.createElement(SignUp, {\n            handleSubmitForSignUp: _this2.handleSubmitForSignUp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(Login, {\n            handleSubmitForLogin: _this2.handleSubmitForLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render() {\n          return React.createElement(Home, {\n            user: _this2.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: Error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js"],"names":["React","Component","Route","Switch","withRouter","ReactMediaVisualizer","Home","WebPlayer","PlaylistContainer","AlbumContainer","ArtistContainer","SongList","SongCard","SongDetail","ProfileContainer","SignUp","Login","Error","App","state","user","currentPlaylist","currentSong","userPlaylists","componentDidMount","token","localStorage","console","log","handleSubmitForSignUp","userData","fetch","method","headers","accepts","body","JSON","stringify","then","resp","json","userInfo","setState","setItem","jwt","props","history","push","handleSubmitForLogin","selectedPlaylistCard","playlistObj","selectedTrackCard","trackObj","addPlayistToUser","playlist","trackList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n//need to have both the route and switch\n//Switch stops at the first match\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport ReactMediaVisualizer from 'react-media-visualizer';\nimport Home from './components/Home';\nimport WebPlayer from './components/WebPlayer';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport AlbumContainer from './components/AlbumContainer';\nimport ArtistContainer from './components/ArtistContainer';\nimport SongList from './components/SongList';\nimport SongCard from './components/SongCard';\nimport SongDetail from './components/SongDetail';\nimport ProfileContainer from './components/ProfileContainer';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport './App.css';\n\n\n\n\n// <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\nclass App extends Component {\n  state = {\n    user: {},\n    currentPlaylist:{},\n    currentSong: {},\n    userPlaylists: []\n  }\n  //allows the user to stay logged in\n  // if user? take the token from localStorage and send in to the backend\n  // check to see if there is a user\n  // if there is a user fetch to current_user\n  //add the key Authorization that is recieving the token\n  //change this.props.history.push(\"/albums\") to the user view page when finished with albums\n\n  componentDidMount = () => {\n    let token = localStorage.token;\n    console.log(token);\n    if (token) {\n      console.log(\"we got the token\");\n    } else {\n      console.log(\"no token\");\n    }\n\n    // return token\n    //  ? fetch(\"http://localhost:3000/api/v1/current_user\",{\n    //     method: \"GET\",\n    //     headers: {\n    //       \"content-type\": \"application/json\",\n    //       accepts: \"application/json\",\n    //       Authorization: `Bearer ${token}`\n    //     }\n    //   })\n    //   .then( resp => resp.json())\n    //   .then(user => {\n    //     this.setState({user: user }, () => {\n    //       this.props.history.push(\"/webplayer\")\n    //     });\n    //   })\n    // : (this.props.history.push(\"/signup\"))\n  };\n\n\n  handleSubmitForSignUp = (userData) => {\n    console.log(userData);\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({ user: userData })\n    })\n    .then(resp => resp.json())\n    .then(userInfo => {\n      this.setState({ user: userInfo.user }, () => {\n        localStorage.setItem(\"token\", userInfo.jwt )\n        this.props.history.push(\"/playlists\")\n      });\n    });\n  };\n\n  handleSubmitForLogin = (userData) => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({ user: userData })\n      })\n      .then(resp => resp.json())\n      .then(userInfo => {\n          console.log(userInfo)\n          this.setState({ user: userInfo.user },\n          () => this.props.history.push(\"/webplayer\"));\n      })\n    }\n\n  selectedPlaylistCard = (playlistObj) => {\n    this.setState({\n      currentPlaylist: playlistObj\n    })\n  }\n\n  selectedTrackCard = (trackObj) => {\n    this.setState({\n      currentSong: trackObj\n    })\n  }\n\n  addPlayistToUser = (playlist) => {\n    this.setState({\n      userPlaylists: [playlist, ...this.state.userPlaylists]\n    })\n  }\n  // afterSelectPlaylistCard=()=>{\n  //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n  //   debugger\n  //   let href = this.state.currentPlaylist.links.tracks.href\n  //   let url = ''\n  //   if (!!href){\n  //     url = `${href}${apiKey}`\n  //   }\n  //   console.log(this.state);\n  //   url\n  //   ? fetch(url)\n  //   .then(resp => resp.json())\n  //   .then(tracksData => {\n  //     this.setState({\n  //       trackList: tracksData.tracks\n  //     })\n  //   })\n  //   : console.log('hi');\n  // }\n  //\n  // selectedPlaylistCard = (playlistObj) => {\n  //   this.setState({\n  //     currentPlaylist: playlistObj\n  //   }, console.log(this.state))\n  //   this.afterSelectPlaylistCard(playlistObj)\n  // }\n\n\n  render() {\n\n    //console.log('app state', this.state)\n\n    //browser router listens for the change in route and tells the application what to do based on the route.\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/playlists/:name/:songname\"\n            render={()=> <SongDetail currentSong={this.state.currentSong}/>}/>\n          <Route path=\"/playlists/:name\"\n            render={()=> <SongList currentPlaylist={this.state.currentPlaylist} trackList={this.state.trackList} selectedTrackCard={this.selectedTrackCard}/>}/>\n          <Route exact path=\"/albums\"\n            render={()=> <AlbumContainer/> } />\n          <Route exact path=\"/playlists\"\n            render={()=> <PlaylistContainer user={this.state.user} selectedPlaylistCard={this.selectedPlaylistCard} addPlayistToUser={this.addPlayistToUser}/> } />\n          <Route\n            exact path=\"/webplayer\"\n            render={() => <WebPlayer user={this.state.user}selectedPlaylistCard={this.selectedPlaylistCard}addPlayistToUser={this.addPlayistToUser}/> } />\n          <Route\n            exact path=\"/artists\"\n            render={() => <ArtistContainer/> } />\n          <Route\n            exact path=\"/profiles\"\n            render={() => <ProfileContainer/> } />\n          <Route\n            exact path=\"/signup\"\n            render={ () => <SignUp handleSubmitForSignUp={this.handleSubmitForSignUp}/> } />\n          <Route\n            exact path=\"/login\"\n            render={ () => <Login handleSubmitForLogin={this.handleSubmitForLogin}/> } />\n          <Route\n            path=\"/home\"\n            render={ () => <Home user={this.state.user} /> } />\n          <Route\n            path=\"/\"\n            component={Error} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}