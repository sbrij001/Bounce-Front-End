{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/src/components/WebPlayer.js\";\nimport React from 'react';\nimport PlaylistCard from './PlaylistCard';\nimport UserPlaylistCard from './PlaylistCard';\nimport { withRouter } from 'react-router-dom';\nimport MapBox from './MapBox'; //css\n\nvar WebPlayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WebPlayer, _React$Component);\n\n  function WebPlayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WebPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WebPlayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      top: [],\n      allPlaylists: [],\n      favPlayistId: [],\n      userPlaylists: []\n    };\n\n    _this.componentDidMount = function () {\n      var token = localStorage.token; //top playlist\n      // Object.keys(this.props.user).length > 0\n      // ?\n\n      fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=6\").then(function (resp) {\n        return resp.json();\n      }).then(function (topPlaylist) {\n        _this.setState({\n          top: topPlaylist.playlists\n        });\n      }); // : this.props.history.push(\"/login\")\n      // top albums\n      // Object.keys(this.props.user).length > 0\n      // ?\n\n      fetch(\"http://api.napster.com/v2.2/playlists?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=-2\").then(function (resp) {\n        return resp.json();\n      }).then(function (allPlaylists) {\n        _this.setState({\n          allPlaylists: allPlaylists.playlists\n        });\n      }); // : this.props.history.push(\"/login\")\n      //fetch to get user playlists\n      // Object.keys(this.props.user).length > 0\n      // ?\n      // fetch(\"http://localhost:3000/api/v1/user_playlists\", {\n      //   method: \"GET\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //     Accept: \"application/json\",\n      //     Authorization: `Bearer ${token}`\n      //   },\n      // })\n      // .then(resp => resp.json())\n      // .then(favPlayist => {\n      //   this.setState({\n      //     favPlayistId: favPlayist\n      //   })\n      //   this.state.favPlayistId.forEach((playlistObj) => {\n      //     let playlistId = playlistObj.napster_playlist_id\n      //     fetch(`http://api.napster.com/v2.2/playlists/${playlistId}?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5`)\n      //     .then(resp => resp.json())\n      //     .then(playlistObj => {\n      //       this.setState({\n      //         userPlaylists: [playlistObj.playlists[0], ...this.state.userPlaylists]\n      //       })\n      //     })\n      //   })\n      //\n      //\n      // })\n      // : this.props.history.push(\"/login\")\n    };\n\n    _this.renderTopToPage = function () {\n      var newArr = _this.state.top.map(function (playlist) {\n        return React.createElement(PlaylistCard, {\n          key: playlist.id,\n          playlist: playlist,\n          selectedPlaylistCard: _this.props.selectedPlaylistCard,\n          currentPlaylist: _this.props.currentPlaylist,\n          handleClickForPostingSongToWebplayer: _this.props.handleClickForPostingSongToWebplayer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      });\n\n      return newArr;\n    };\n\n    _this.renderAllPlaylistsToPage = function () {\n      var newArr = _this.state.allPlaylists.map(function (playlist) {\n        return React.createElement(PlaylistCard, {\n          key: playlist.id,\n          playlist: playlist,\n          selectedPlaylistCard: _this.props.selectedPlaylistCard,\n          currentPlaylist: _this.props.currentPlaylist,\n          addPlayistToUser: _this.addPlayistToUser,\n          handleClickForPostingSongToWebplayer: _this.props.handleClickForPostingSongToWebplayer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      });\n\n      return newArr;\n    };\n\n    _this.renderUserPlaylistToPage = function () {\n      console.log('userPlaylists', _this.state.userPlaylists);\n\n      var newArr = _this.state.userPlaylists.map(function (playlist) {\n        return React.createElement(UserPlaylistCard, {\n          key: playlist.id,\n          playlist: playlist,\n          currentPlaylist: _this.props.currentPlaylist,\n          selectedPlaylistCard: _this.props.selectedPlaylistCard,\n          addPlayistToUser: _this.addPlayistToUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      });\n\n      return newArr;\n    };\n\n    return _this;\n  }\n\n  _createClass(WebPlayer, [{\n    key: \"render\",\n    value: function render() {\n      console.log('WEBPLAYER PROPS', this.props);\n      return React.createElement(\"div\", {\n        className: \"webplayer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Recently Played\"), this.renderUserPlaylistToPage()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Top\"), this.renderTopToPage()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"A Little Bit Of Everything\"), this.renderAllPlaylistsToPage()), React.createElement(MapBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WebPlayer;\n}(React.Component);\n\nexport default withRouter(WebPlayer);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Flatiron Projects/bounce-front-end/src/components/WebPlayer.js"],"names":["React","PlaylistCard","UserPlaylistCard","withRouter","MapBox","WebPlayer","state","top","allPlaylists","favPlayistId","userPlaylists","componentDidMount","token","localStorage","fetch","then","resp","json","topPlaylist","setState","playlists","renderTopToPage","newArr","map","playlist","id","props","selectedPlaylistCard","currentPlaylist","handleClickForPostingSongToWebplayer","renderAllPlaylistsToPage","addPlayistToUser","renderUserPlaylistToPage","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlaylistCard from './PlaylistCard';\nimport UserPlaylistCard from './PlaylistCard';\nimport { withRouter } from 'react-router-dom';\nimport MapBox from './MapBox';\n//css\n\n\nclass WebPlayer extends React.Component{\n  state = {\n    top: [],\n    allPlaylists: [],\n    favPlayistId: [],\n    userPlaylists: []\n  }\n\n  componentDidMount = () => {\n    let token = localStorage.token\n    //top playlist\n    // Object.keys(this.props.user).length > 0\n    // ?\n    fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=6\")\n    .then(resp => resp.json())\n    .then(topPlaylist => {\n      this.setState({\n        top: topPlaylist.playlists\n      })\n    })\n    // : this.props.history.push(\"/login\")\n    // top albums\n    // Object.keys(this.props.user).length > 0\n    // ?\n    fetch(\"http://api.napster.com/v2.2/playlists?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=-2\")\n    .then(resp => resp.json())\n    .then(allPlaylists => {\n      this.setState({\n        allPlaylists: allPlaylists.playlists\n      })\n    })\n    // : this.props.history.push(\"/login\")\n    //fetch to get user playlists\n    // Object.keys(this.props.user).length > 0\n    // ?\n    // fetch(\"http://localhost:3000/api/v1/user_playlists\", {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: `Bearer ${token}`\n    //   },\n    // })\n    // .then(resp => resp.json())\n    // .then(favPlayist => {\n    //   this.setState({\n    //     favPlayistId: favPlayist\n    //   })\n    //   this.state.favPlayistId.forEach((playlistObj) => {\n    //     let playlistId = playlistObj.napster_playlist_id\n    //     fetch(`http://api.napster.com/v2.2/playlists/${playlistId}?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5`)\n    //     .then(resp => resp.json())\n    //     .then(playlistObj => {\n    //       this.setState({\n    //         userPlaylists: [playlistObj.playlists[0], ...this.state.userPlaylists]\n    //       })\n    //     })\n    //   })\n    //\n    //\n    // })\n    // : this.props.history.push(\"/login\")\n  }\n\n\n\n\n  // USE TO GET THE TRACKS FOR A USER PLAYLIST\n  // .then(playlistObj => {\n  //   fetch(playlistObj.playlists[0].links.tracks.href + \"?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10\")\n  //   .then(resp => resp.json())\n  //   .then(tracksArr => {\n  //     this.setState({\n  //       userPlaylists: tracksArr.tracks\n  //     })\n  //   })\n  // })\n\n\n\n\n\n\n// http://api.napster.com/v2.2/playlists/pp.125821370?apikey=YTkxZTRhNzAtODdlNy00ZjMzLTg0MWItOTc0NmZmNjU4Yzk4\n\n// https://api.napster.com/v2.2/playlists/pp.224772103/tracks?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\n  // getPlaylistsIds = () => {\n  //   consr this.state.favPlayistId.map(playlist => playlist.napster_playlist_id)\n  // }\n  renderTopToPage = () => {\n    const newArr = this.state.top.map( playlist => {\n      return <PlaylistCard key={playlist.id} playlist={playlist} selectedPlaylistCard={this.props.selectedPlaylistCard} currentPlaylist={this.props.currentPlaylist} handleClickForPostingSongToWebplayer={this.props.handleClickForPostingSongToWebplayer} />\n    })\n      return newArr\n  }\n  renderAllPlaylistsToPage = () => {\n    const newArr = this.state.allPlaylists.map( playlist => {\n      return <PlaylistCard key={playlist.id} playlist={playlist} selectedPlaylistCard={this.props.selectedPlaylistCard} currentPlaylist={this.props.currentPlaylist} addPlayistToUser={this.addPlayistToUser} handleClickForPostingSongToWebplayer={this.props.handleClickForPostingSongToWebplayer}/>\n    })\n      return newArr\n  }\n\n  renderUserPlaylistToPage = () => {\n    console.log('userPlaylists', this.state.userPlaylists);\n    const newArr = this.state.userPlaylists.map( playlist => {\n      return <UserPlaylistCard key={playlist.id} playlist={playlist} currentPlaylist={this.props.currentPlaylist} selectedPlaylistCard={this.props.selectedPlaylistCard} addPlayistToUser={this.addPlayistToUser}/>\n    })\n      return newArr\n  }\n\n\n  render(){\n\n\n    console.log('WEBPLAYER PROPS', this.props);\n    return(\n      <div className=\"webplayer\">\n        <div>\n        <h2>Recently Played</h2>\n        {this.renderUserPlaylistToPage()}\n        </div>\n        <div>\n        <h2>Top</h2>\n        {this.renderTopToPage()}\n        </div>\n        <div>\n        <h2>A Little Bit Of Everything</h2>\n        {this.renderAllPlaylistsToPage()}\n        </div>\n        <MapBox/>\n      </div>\n    )\n  }\n}\n\n\n\nexport default withRouter(WebPlayer);\n"]},"metadata":{},"sourceType":"module"}