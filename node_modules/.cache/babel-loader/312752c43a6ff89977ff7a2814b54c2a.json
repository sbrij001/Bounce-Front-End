{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\"; //need to have both the route and switch\n//Switch stops at the first match\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport ReactMediaVisualizer from 'reac-media-visualizer';\nimport Home from './components/Home';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport ArtistContainer from './components/ArtistContainer';\nimport SongList from './components/SongList';\nimport ProfileContainer from './components/ProfileContainer';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport './App.css'; // <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: {},\n      currentPlaylist: {} //allows the user to stay logged in\n      // if user? take the token from localStorage and send in to the backend\n      // check to see if there is a user\n      // if there is a user fetch to current_user\n      //add the key Authorization that is recieving the token\n\n    };\n\n    _this.componentDidMount = function () {\n      var token = localStorage.token;\n      token ? fetch(\"http://localhost:3000/api/v1/current_user\", {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\",\n          Authorization: \"Bearer \".concat(token)\n        }\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (user) {\n        _this.setState({\n          user: user\n        }, function () {\n          _this.props.history.push(\"/playlists\");\n        });\n      }) : _this.props.history.push(\"/signup\");\n    };\n\n    _this.handleSubmitForSignUp = function (userData) {\n      fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        _this.setState({\n          user: userInfo.user\n        }, function () {\n          localStorage.setItem(\"token\", userInfo.jwt);\n\n          _this.props.history.push(\"/playlists\");\n        });\n      });\n    };\n\n    _this.handleSubmitForLogin = function (userData) {\n      fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (userInfo) {\n        return _this.setState({\n          user: userInfo.user\n        });\n      }, function () {\n        return _this.props.history.push(\"/playlists\");\n      });\n    };\n\n    _this.selectedPlaylistCard = function (playlistObj) {\n      _this.setState({\n        currentPlaylist: playlistObj\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // afterSelectPlaylistCard=()=>{\n    //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    //   debugger\n    //   let href = this.state.currentPlaylist.links.tracks.href\n    //   let url = ''\n    //   if (!!href){\n    //     url = `${href}${apiKey}`\n    //   }\n    //   console.log(this.state);\n    //   url\n    //   ? fetch(url)\n    //   .then(resp => resp.json())\n    //   .then(tracksData => {\n    //     this.setState({\n    //       trackList: tracksData.tracks\n    //     })\n    //   })\n    //   : console.log('hi');\n    // }\n    //\n    // selectedPlaylistCard = (playlistObj) => {\n    //   this.setState({\n    //     currentPlaylist: playlistObj\n    //   }, console.log(this.state))\n    //   this.afterSelectPlaylistCard(playlistObj)\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      //console.log('app state', this.state)\n      //browser router listens for the change in route and tells the application what to do based on the route.\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/playlists/:name\",\n        render: function render() {\n          return React.createElement(SongList, {\n            currentPlaylist: _this2.state.currentPlaylist,\n            trackList: _this2.state.trackList,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/playlists\",\n        render: function render() {\n          return React.createElement(PlaylistContainer, {\n            user: _this2.state.user,\n            selectedPlaylistCard: _this2.selectedPlaylistCard,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/artists\",\n        render: function render() {\n          return React.createElement(ArtistContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/profiles\",\n        render: function render() {\n          return React.createElement(ProfileContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: function render() {\n          return React.createElement(SignUp, {\n            handleSubmitForSignUp: _this2.handleSubmitForSignUp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(Login, {\n            handleSubmitForLogin: _this2.handleSubmitForLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render() {\n          return React.createElement(Home, {\n            user: _this2.state.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: Error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/App.js"],"names":["React","Component","Route","Switch","withRouter","ReactMediaVisualizer","Home","PlaylistContainer","ArtistContainer","SongList","ProfileContainer","SignUp","Login","Error","App","state","user","currentPlaylist","componentDidMount","token","localStorage","fetch","method","headers","accepts","Authorization","then","resp","json","setState","props","history","push","handleSubmitForSignUp","userData","body","JSON","stringify","userInfo","setItem","jwt","handleSubmitForLogin","selectedPlaylistCard","playlistObj","trackList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n//need to have both the route and switch\n//Switch stops at the first match\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport ReactMediaVisualizer from 'reac-media-visualizer';\nimport Home from './components/Home';\nimport PlaylistContainer from './components/PlaylistContainer';\nimport ArtistContainer from './components/ArtistContainer';\nimport SongList from './components/SongList';\nimport ProfileContainer from './components/ProfileContainer';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport './App.css';\n\n\n\n\n// <Route exact path=\"/playlists/:name\" render={()=> <PlaylistContainer/>} />\nclass App extends Component {\n  state = {\n    user: {},\n    currentPlaylist:{}\n  }\n  //allows the user to stay logged in\n  // if user? take the token from localStorage and send in to the backend\n  // check to see if there is a user\n  // if there is a user fetch to current_user\n  //add the key Authorization that is recieving the token\n  componentDidMount = () => {\n    let token = localStorage.token;\n    token\n     ? fetch(\"http://localhost:3000/api/v1/current_user\",{\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then( resp => resp.json())\n      .then(user => {\n        this.setState({user: user }, () => {\n          this.props.history.push(\"/playlists\")\n        });\n      })\n    : (this.props.history.push(\"/signup\"))\n  };\n\n\n  handleSubmitForSignUp = (userData) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({ user: userData })\n    })\n    .then(resp => resp.json())\n    .then(userInfo => {\n      this.setState({ user: userInfo.user }, () => {\n        localStorage.setItem(\"token\", userInfo.jwt )\n        this.props.history.push(\"/playlists\")\n      });\n    });\n  };\n\n  handleSubmitForLogin = (userData) => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({ user: userData })\n      })\n        .then(resp => resp.json())\n        .then(\n          userInfo => this.setState({ user: userInfo.user }),\n          () => this.props.history.push(\"/playlists\")\n        );\n  }\n\n  selectedPlaylistCard = (playlistObj) => {\n\n    this.setState({\n      currentPlaylist: playlistObj\n    })\n  }\n  // afterSelectPlaylistCard=()=>{\n  //   const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n  //   debugger\n  //   let href = this.state.currentPlaylist.links.tracks.href\n  //   let url = ''\n  //   if (!!href){\n  //     url = `${href}${apiKey}`\n  //   }\n  //   console.log(this.state);\n  //   url\n  //   ? fetch(url)\n  //   .then(resp => resp.json())\n  //   .then(tracksData => {\n  //     this.setState({\n  //       trackList: tracksData.tracks\n  //     })\n  //   })\n  //   : console.log('hi');\n  // }\n  //\n  // selectedPlaylistCard = (playlistObj) => {\n  //   this.setState({\n  //     currentPlaylist: playlistObj\n  //   }, console.log(this.state))\n  //   this.afterSelectPlaylistCard(playlistObj)\n  // }\n\n\n  render() {\n\n    //console.log('app state', this.state)\n\n    //browser router listens for the change in route and tells the application what to do based on the route.\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/playlists/:name\"\n            render={()=> <SongList currentPlaylist={this.state.currentPlaylist} trackList={this.state.trackList}/>}/>\n          <Route exact path=\"/playlists\"\n            render={()=> <PlaylistContainer user={this.state.user} selectedPlaylistCard={this.selectedPlaylistCard}/> } />\n          <Route\n            exact path=\"/artists\"\n            render={ () => <ArtistContainer/> } />\n          <Route\n            exact path=\"/profiles\"\n            render={ () => <ProfileContainer/> } />\n          <Route\n            exact path=\"/signup\"\n            render={ () => <SignUp handleSubmitForSignUp={this.handleSubmitForSignUp}/> } />\n          <Route\n            exact path=\"/login\"\n            render={ () => <Login handleSubmitForLogin={this.handleSubmitForLogin}/> } />\n          <Route\n            path=\"/home\"\n            render={ () => <Home user={this.state.user} /> } />\n          <Route\n            path=\"/\"\n            component={Error} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}