{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nvar PlaylistContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaylistContainer, _React$Component);\n\n  function PlaylistContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlaylistContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlaylistContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      playlistsArr: [] // first check if there is a user if there is fetch the data and display it on the page\n      // else push to the login\n      //this.state.playlistsArr.playlists[0].links.tracks\n\n    };\n\n    _this.componentDidMount = function () {\n      Object.keys(_this.props.user).length > 0 ? fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\").then(function (resp) {\n        return resp.json();\n      }).then(function (playlists) {\n        return _this.setState({\n          playlistsArr: playlists\n        });\n      }) : _this.props.history.push(\"/login\");\n    };\n\n    _this.renderPlaylistCard = function () {\n      var playlists = _this.state.playlistsArr.playlists;\n      console.log('all of the playlists', _this.state.playlistsArr.playlists);\n      playlists.map(function (playlists) {\n        return console.log;\n      }); // this.state.playlistsArr.playlists.map(playlists => console.log)\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaylistContainer, [{\n    key: \"render\",\n    //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n    // render takes in a callback function\n    // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Playlist Container\"), this.renderPlaylistCard());\n    }\n  }]);\n\n  return PlaylistContainer;\n}(React.Component);\n\nexport default withRouter(PlaylistContainer);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/PlaylistContainer.js"],"names":["React","Route","withRouter","PlaylistContainer","state","playlistsArr","componentDidMount","Object","keys","props","user","length","fetch","then","resp","json","playlists","setState","history","push","renderPlaylistCard","console","log","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;;IAEMC,iB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,EADR,CAKV;AACA;AACA;;AAPU,K;;UAQRC,iB,GAAoB,YAAM;AACxBC,MAAAA,MAAM,CAACC,IAAP,CAAY,MAAKC,KAAL,CAAWC,IAAvB,EAA6BC,MAA7B,GAAsC,CAAtC,GACEC,KAAK,CAAC,mGAAD,CAAL,CACDC,IADC,CACI,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADR,EAEDF,IAFC,CAEI,UAAAG,SAAS;AAAA,eAAI,MAAKC,QAAL,CAAc;AAC/BZ,UAAAA,YAAY,EAAEW;AADiB,SAAd,CAAJ;AAAA,OAFb,CADF,GAOE,MAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAPF;AAQD,K;;UAEDC,kB,GAAqB,YAAM;AACzB,UAAMJ,SAAS,GAAG,MAAKZ,KAAL,CAAWC,YAAX,CAAwBW,SAA1C;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,MAAKlB,KAAL,CAAWC,YAAX,CAAwBW,SAA5D;AACAA,MAAAA,SAAS,CAACO,GAAV,CAAc,UAAAP,SAAS;AAAA,eAAIK,OAAO,CAACC,GAAZ;AAAA,OAAvB,EAHyB,CAIzB;AACD,K;;;;;;;AACD;AACA;AACA;6BACQ;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKF,kBAAL,EAFH,CADF;AAMD;;;;EApC6BpB,KAAK,CAACwB,S;;AAuCtC,eAAetB,UAAU,CAACC,iBAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { Route, withRouter } from 'react-router-dom'\n\nclass PlaylistContainer extends React.Component{\n  state = {\n    playlistsArr: []\n  }\n\n\n// first check if there is a user if there is fetch the data and display it on the page\n// else push to the login\n//this.state.playlistsArr.playlists[0].links.tracks\n  componentDidMount = () => {\n    Object.keys(this.props.user).length > 0\n    ? fetch(\"http://api.napster.com/v2.2/playlists/top?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5\")\n    .then(resp => resp.json())\n    .then(playlists => this.setState({\n      playlistsArr: playlists\n    })\n    )\n    : this.props.history.push(\"/login\")\n  }\n\n  renderPlaylistCard = () => {\n    const playlists = this.state.playlistsArr.playlists\n    console.log('all of the playlists', this.state.playlistsArr.playlists);\n    playlists.map(playlists => console.log)\n    // this.state.playlistsArr.playlists.map(playlists => console.log)\n  }\n  //render has it's own props => console.log(\"render props\", renderProps.match.params.name );\n  // render takes in a callback function\n  // <Route path=\"/playlists/:name\" render={() =>{} PlaylistCard}>\n  render(){\n    return(\n      <div>\n        <h1>Playlist Container</h1>\n        {this.renderPlaylistCard()}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PlaylistContainer);\n"]},"metadata":{},"sourceType":"module"}