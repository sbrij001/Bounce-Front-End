{"ast":null,"code":"import _classCallCheck from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongCard.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Sound from 'react-sound';\nimport PropTypes from 'prop-types';\nimport PlayButton from './PureComponents/PlayButton';\n\nvar SongCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SongCard, _React$Component);\n\n  function SongCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SongCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SongCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      albumImage: [],\n      playingURL: \"\",\n      audio: null,\n      playing: false\n    };\n\n    _this.componentDidMount = function () {\n      var apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n      var href = _this.props.track.links.albums.href;\n      var url = \"\".concat(href).concat(apiKey);\n      url ? fetch(url).then(function (resp) {\n        return resp.json();\n      }).then(function (albumsArr) {\n        _this.setState({\n          albumImage: albumsArr\n        });\n      }) : console.log('hi');\n    };\n\n    return _this;\n  }\n\n  _createClass(SongCard, [{\n    key: \"playAudio\",\n    //  componentDidUpdate(prestate, preprops){\n    //\n    //    if(this.props.currentAudio !== this.state.audio)\n    //    {\n    //      console.log(\"hit didupdate\")\n    //      if(this.props.currentAudio){\n    //         console.log(\"hit didupdate 2\")\n    //        this.props.currentAudio.pause()\n    //\n    //      }\n    //  }\n    // }\n    value: function playAudio(previewURL) {\n      // console.log('playing', this.state.playing);\n      // if(this.state.playing === true){\n      //   console.log(\"hit here\")\n      //   console.log(\"audio\", this.state.audio)\n      //   this.pauseAudio(this.state.playingURL)\n      // }\n      // if (this.state.playing === false) {\n      var audio = new Audio(previewURL);\n      audio.play();\n      this.setState({\n        playing: true,\n        playingURL: previewURL,\n        audio: audio\n      }); // }\n      // },() => console.log('playing',this.state.playing))\n      // }else {\n      //   console.log('hit');\n      //   this.pauseAudio(previewURL)\n      // }\n      // }else {\n      //   this.state.audio.pause();\n      //   audio.play();\n      //   this.setState({\n      //     playing: true,\n      //     playingURL: previewURL,\n      //     audio: audio\n      //   })\n    }\n  }, {\n    key: \"pauseAudio\",\n    value: function pauseAudio(previewURL) {\n      var _this2 = this;\n\n      console.log(\"pause audio\");\n      var audio = new Audio(previewURL);\n\n      if (this.state.playingURL === previewURL) {\n        this.state.audio.pause();\n        this.setState({\n          playing: false\n        }, function () {\n          return console.log(\"set playing to false\", _this2.state.playing);\n        });\n      }\n    } //why is album[0] undefined?\n    //<img src={this.state.albumImage.albums[0].links.images.href}/>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"song-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.track.name), React.createElement(\"h3\", {\n        className: \"song-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.track.artistName), React.createElement(\"h4\", {\n        className: \"song-album-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.track.albumName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.playAudio(_this3.props.track.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"PLAY\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.pauseAudio(_this3.props.track.previewURL);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"PAUSE\"), React.createElement(Link, {\n        to: \"/playlists/\".concat(this.props.playlist.name, \"/\").concat(this.props.track.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"View Song\")))));\n    }\n  }]);\n\n  return SongCard;\n}(React.Component);\n\nexport default withRouter(SongCard);","map":{"version":3,"sources":["/Users/shivanibrijmohan/Development/code/Mod5/bloc/bloc-front-end/src/components/SongCard.js"],"names":["React","withRouter","Sound","PropTypes","PlayButton","SongCard","state","albumImage","playingURL","audio","playing","componentDidMount","apiKey","href","props","track","links","albums","url","fetch","then","resp","json","albumsArr","setState","console","log","previewURL","Audio","play","pause","name","artistName","albumName","playAudio","pauseAudio","playlist","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Sound from 'react-sound';\nimport PropTypes from 'prop-types';\nimport PlayButton from './PureComponents/PlayButton'\nclass SongCard extends React.Component{\n  state = {\n    albumImage: [],\n    playingURL: \"\",\n    audio: null,\n    playing: false,\n  }\n\n  componentDidMount = () => {\n    const apiKey = '?apikey=MTU1YjllNjUtOTIwNi00MGJlLWJlOWMtZGYxMjJhZDI0NTk5&limit=10';\n    const href = this.props.track.links.albums.href\n    const url = `${href}${apiKey}`\n    url\n      ? fetch(url)\n      .then(resp => resp.json())\n      .then(albumsArr => {\n        this.setState({\n          albumImage: albumsArr\n        })\n      })\n      : console.log('hi');\n  }\n\n//  componentDidUpdate(prestate, preprops){\n//\n//    if(this.props.currentAudio !== this.state.audio)\n//    {\n//      console.log(\"hit didupdate\")\n//      if(this.props.currentAudio){\n//         console.log(\"hit didupdate 2\")\n//        this.props.currentAudio.pause()\n//\n//      }\n//  }\n// }\n  playAudio(previewURL){\n    // console.log('playing', this.state.playing);\n    // if(this.state.playing === true){\n    //   console.log(\"hit here\")\n    //   console.log(\"audio\", this.state.audio)\n    //   this.pauseAudio(this.state.playingURL)\n    // }\n    // if (this.state.playing === false) {\n      let audio = new Audio(previewURL)\n      audio.play()\n      this.setState({\n        playing: true,\n        playingURL: previewURL,\n        audio: audio\n      })\n    // }\n      // },() => console.log('playing',this.state.playing))\n    // }else {\n    //   console.log('hit');\n    //   this.pauseAudio(previewURL)\n    // }\n\n    // }else {\n    //   this.state.audio.pause();\n    //   audio.play();\n    //   this.setState({\n    //     playing: true,\n    //     playingURL: previewURL,\n    //     audio: audio\n    //   })\n  }\n\n  pauseAudio(previewURL){\n    console.log(\"pause audio\")\n    let audio = new Audio(previewURL)\n    if (this.state.playingURL === previewURL) {\n      this.state.audio.pause()\n      this.setState({\n        playing: false\n      }, ()=>console.log(\"set playing to false\",this.state.playing))\n    }\n  }\n  //why is album[0] undefined?\n  //<img src={this.state.albumImage.albums[0].links.images.href}/>\n  render(){\n    return(\n      <div>\n        <div className=\"-info\">\n          <h2 className=\"song-name\">{this.props.track.name}</h2>\n          <h3 className=\"song-artist\">{this.props.track.artistName}</h3>\n          <h4 className=\"song-album-name\">{this.props.track.albumName}</h4>\n          <div>\n          <button onClick={ () => this.playAudio(this.props.track.previewURL) }>PLAY</button>\n          <button onClick={ () => this.pauseAudio(this.props.track.previewURL) }>PAUSE</button>\n          <Link to={`/playlists/${this.props.playlist.name}/${this.props.track.name}`}>\n            <button>View Song</button>\n          </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SongCard);\n"]},"metadata":{},"sourceType":"module"}