{"ast":null,"code":"import _classCallCheck from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thuanbui/source_code/react-mapbox-gl-cluster/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport MapboxGl from \"mapbox-gl\";\nimport { checkPropsChange, extractEventHandlers, getExactEventHandlerName } from \"../../common/utils\";\nimport MappedComponent from \"../MappedComponent\";\n\nvar MarkerLayer =\n/*#__PURE__*/\nfunction (_MappedComponent) {\n  _inherits(MarkerLayer, _MappedComponent);\n\n  function MarkerLayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MarkerLayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarkerLayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._disableMapDragPan = function () {\n      var map = _this.getMapInstance();\n\n      if (map) {\n        map.dragPan.disable();\n      }\n    };\n\n    _this._enableMapDragPan = function () {\n      var map = _this.getMapInstance();\n\n      if (map) {\n        map.dragPan.enable();\n      }\n    };\n\n    _this._generateEventHander = function (eventName) {\n      return function (e) {\n        var handler = _this.props[eventName];\n\n        if (_.isFunction(handler)) {\n          var coordinates = _this.props.coordinates;\n\n          var properties = _this.getProperties();\n\n          handler(properties, coordinates, _this.getOffset(), e);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(MarkerLayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = this.attachChildren(this.props);\n      this.layer = new MapboxGl.Marker(node).setLngLat(this.props.coordinates).addTo(this.getMapInstance());\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.coordinates !== this.props.coordinates) {\n        this.layer.setLngLat(nextProps.coordinates);\n      }\n\n      if (nextProps.children !== this.props.children || checkPropsChange(this.props, nextProps, [\"style\", \"className\"])) {\n        this.attachChildren(nextProps);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.layer.remove();\n      delete this.layer;\n    }\n  }, {\n    key: \"attachChildren\",\n    value: function attachChildren() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var children = props.children;\n\n      if (children) {\n        if (!this.element) {\n          this.element = document.createElement(\"div\");\n        } else {\n          this._unbindEvents();\n        }\n\n        var style = this.getStyle(this.props);\n        this.element.className = this.getContainerClassName(props);\n        Object.keys(style).forEach(function (s) {\n          _this2.element.style[s] = style[s];\n        });\n\n        this._bindEvents();\n\n        var content = this.getContent(props);\n        ReactDOM.render(content, this.element);\n      }\n\n      return this.element;\n    }\n  }, {\n    key: \"getContainerClassName\",\n    value: function getContainerClassName(props) {\n      return \"mapboxgl-marker \".concat(props.className);\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent(props) {\n      var children = props.children;\n      return React.createElement(\"div\", {\n        className: \"nio-marker-content f-width f-height\"\n      }, children);\n    }\n  }, {\n    key: \"getProperties\",\n    value: function getProperties() {\n      return this.props.properties;\n    }\n  }, {\n    key: \"getOffset\",\n    value: function getOffset() {\n      return [0, 0];\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(props) {\n      return _.clone(props.style) || {};\n    }\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      var _this3 = this;\n\n      var events = extractEventHandlers(this.props);\n      this.realHandlers = {};\n\n      _.forEach(events, function (handler, name) {\n        var realHandler = _this3._generateEventHander(name);\n\n        _this3.element.addEventListener(getExactEventHandlerName(name), realHandler);\n\n        _this3.realHandlers[name] = realHandler;\n      });\n\n      this.element.addEventListener(\"mousedown\", this._disableMapDragPan);\n      this.element.addEventListener(\"mouseup\", this._enableMapDragPan);\n    }\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      var _this4 = this;\n\n      var events = extractEventHandlers(this.props);\n      this.element.removeEventListener(\"mousedown\", this._disableMapDragPan);\n      this.element.removeEventListener(\"mouseup\", this._enableMapDragPan);\n\n      _.forEach(events, function (handler, name) {\n        var realHandler = _this4.realHandlers[name];\n\n        _this4.element.removeEventListener(getExactEventHandlerName(name), realHandler);\n      });\n\n      delete this.realHandlers;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return MarkerLayer;\n}(MappedComponent);\n\nMarkerLayer.displayName = \"MarkerLayer\";\nMarkerLayer.propTypes = {\n  /**\n   * (required): [number, number] Display the Marker at the given position\n   */\n  coordinates: PropTypes.array.isRequired,\n\n  /**\n   * Properties of each Marker, will be passed back when events trigged\n   */\n  properties: PropTypes.oneOfType([PropTypes.array.isRequired, PropTypes.object.isRequired, PropTypes.string.isRequired]),\n\n  /**\n   * Apply the className to the container of the Marker\n   */\n  className: PropTypes.string,\n\n  /**\n   * Apply style to the Marker container\n   */\n  style: PropTypes.object,\n\n  /**\n   * Child node(s) of the component, to be rendered as custom Marker\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n\n  /**\n   * [Optional] The click event handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * [Optional] The mouse down event handler\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * [Optional] The mouse enter event handler\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * [Optional] The mouse leave event handler\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * [Optional] The mouse move event handler\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * [Optional] The mouse out event handler\n   */\n  onMouseOut: PropTypes.func,\n\n  /**\n   * [Optional] The mouse over event handler\n   */\n  onMouseOver: PropTypes.func,\n\n  /**\n   * [Optional] The mouse up event handler\n   */\n  onMouseUp: PropTypes.func\n};\nexport default MarkerLayer;","map":null,"metadata":{},"sourceType":"module"}